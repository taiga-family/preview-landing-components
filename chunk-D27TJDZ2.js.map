{"version":3,"sources":["node_modules/@tinkoff/tui-editor/fesm2015/tinkoff-tui-editor-extensions-details.js"],"sourcesContent":["import { tuiDeleteNode, tuiGetSelectedContent } from '@tinkoff/tui-editor/utils';\nimport { Node, mergeAttributes } from '@tiptap/core';\nconst TuiDetails = Node.create({\n  name: `details`,\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  addAttributes() {\n    return {\n      opened: {\n        default: true,\n        keepOnSplit: false,\n        parseHTML: element => element.getAttribute(`data-opened`) === `true`,\n        renderHTML: attributes => ({\n          'data-opened': attributes.opened\n        })\n      }\n    };\n  },\n  content: `summary detailsContent`,\n  group: `block`,\n  draggable: true,\n  allowGapCursor: true,\n  isolating: true,\n  parseHTML() {\n    return [{\n      tag: `details`\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return [`div`, {\n      class: `t-details-wrapper t-details-wrapper_rendered`\n    }, [`details`, mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0], [`button`, {\n      class: `t-details-arrow`\n    }]];\n  },\n  addNodeView() {\n    return ({\n      node,\n      editor\n    }) => {\n      if (globalThis.document) {\n        const wrapper = document.createElement(`div`);\n        const details = document.createElement(`details`);\n        const collapseButton = document.createElement(`button`);\n        const deleteButton = document.createElement(`button`);\n        wrapper.className = `t-details-wrapper`;\n        collapseButton.className = `t-details-arrow`;\n        deleteButton.className = `t-details-delete`;\n        details.open = node.attrs.opened;\n        collapseButton.addEventListener(`click`, () => {\n          details.open = !details.open;\n          node.attrs.opened = details.open;\n        });\n        deleteButton.addEventListener(`click`, () => {\n          tuiDeleteNode(editor.state, editor.view.dispatch, this.name);\n          editor.commands.focus(`end`);\n        });\n        wrapper.append(details, collapseButton, deleteButton);\n        return {\n          dom: wrapper,\n          contentDOM: details\n        };\n      }\n    };\n  },\n  addCommands() {\n    return {\n      setDetails: () => ({\n        commands,\n        state\n      }) => {\n        const content = tuiGetSelectedContent(state);\n        return commands.insertContent(`<details data-opened=\"true\"><summary><p></p></summary><div data-type=\"details-content\"><p>${content}</p></div></details><p></p>`);\n      },\n      removeDetails: () => ({\n        editor,\n        state,\n        dispatch\n      }) => {\n        tuiDeleteNode(state, dispatch, this.name);\n        return editor.commands.focus(`end`);\n      }\n    };\n  }\n});\nconst TuiDetailsContent = Node.create({\n  name: `detailsContent`,\n  content: `block+`,\n  group: `block`,\n  allowGapCursor: true,\n  parseHTML() {\n    return [{\n      tag: `div[data-type=\"details-content\"]`\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return [`div`, mergeAttributes(this.options.HTMLAttributes, HTMLAttributes, {\n      'data-type': `details-content`\n    }), 0];\n  }\n});\nconst TuiSummary = Node.create({\n  name: `summary`,\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  content: `paragraph`,\n  group: `block`,\n  parseHTML() {\n    return [{\n      tag: `summary`\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return [`summary`, mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  }\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiDetails, TuiDetailsContent, TuiSummary };\n"],"mappings":"2HAEA,IAAMA,EAAaC,EAAK,OAAO,CAC7B,KAAM,UACN,YAAa,CACX,MAAO,CACL,eAAgB,CAAC,CACnB,CACF,EACA,eAAgB,CACd,MAAO,CACL,OAAQ,CACN,QAAS,GACT,YAAa,GACb,UAAWC,GAAWA,EAAQ,aAAa,aAAa,IAAM,OAC9D,WAAYC,IAAe,CACzB,cAAeA,EAAW,MAC5B,EACF,CACF,CACF,EACA,QAAS,yBACT,MAAO,QACP,UAAW,GACX,eAAgB,GAChB,UAAW,GACX,WAAY,CACV,MAAO,CAAC,CACN,IAAK,SACP,CAAC,CACH,EACA,WAAW,CACT,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,MAAO,CACb,MAAO,8CACT,EAAG,CAAC,UAAWC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,EAAG,CAAC,SAAU,CAC1F,MAAO,iBACT,CAAC,CAAC,CACJ,EACA,aAAc,CACZ,MAAO,CAAC,CACN,KAAAE,EACA,OAAAC,CACF,IAAM,CACJ,GAAI,WAAW,SAAU,CACvB,IAAMC,EAAU,SAAS,cAAc,KAAK,EACtCC,EAAU,SAAS,cAAc,SAAS,EAC1CC,EAAiB,SAAS,cAAc,QAAQ,EAChDC,EAAe,SAAS,cAAc,QAAQ,EACpD,OAAAH,EAAQ,UAAY,oBACpBE,EAAe,UAAY,kBAC3BC,EAAa,UAAY,mBACzBF,EAAQ,KAAOH,EAAK,MAAM,OAC1BI,EAAe,iBAAiB,QAAS,IAAM,CAC7CD,EAAQ,KAAO,CAACA,EAAQ,KACxBH,EAAK,MAAM,OAASG,EAAQ,IAC9B,CAAC,EACDE,EAAa,iBAAiB,QAAS,IAAM,CAC3CC,EAAcL,EAAO,MAAOA,EAAO,KAAK,SAAU,KAAK,IAAI,EAC3DA,EAAO,SAAS,MAAM,KAAK,CAC7B,CAAC,EACDC,EAAQ,OAAOC,EAASC,EAAgBC,CAAY,EAC7C,CACL,IAAKH,EACL,WAAYC,CACd,CACF,CACF,CACF,EACA,aAAc,CACZ,MAAO,CACL,WAAY,IAAM,CAAC,CACjB,SAAAI,EACA,MAAAC,CACF,IAAM,CACJ,IAAMC,EAAUC,EAAsBF,CAAK,EAC3C,OAAOD,EAAS,cAAc,6FAA6FE,CAAO,6BAA6B,CACjK,EACA,cAAe,IAAM,CAAC,CACpB,OAAAR,EACA,MAAAO,EACA,SAAAG,CACF,KACEL,EAAcE,EAAOG,EAAU,KAAK,IAAI,EACjCV,EAAO,SAAS,MAAM,KAAK,EAEtC,CACF,CACF,CAAC,EACKW,EAAoBjB,EAAK,OAAO,CACpC,KAAM,iBACN,QAAS,SACT,MAAO,QACP,eAAgB,GAChB,WAAY,CACV,MAAO,CAAC,CACN,IAAK,kCACP,CAAC,CACH,EACA,WAAW,CACT,eAAAG,CACF,EAAG,CACD,MAAO,CAAC,MAAOC,EAAgB,KAAK,QAAQ,eAAgBD,EAAgB,CAC1E,YAAa,iBACf,CAAC,EAAG,CAAC,CACP,CACF,CAAC,EACKe,EAAalB,EAAK,OAAO,CAC7B,KAAM,UACN,YAAa,CACX,MAAO,CACL,eAAgB,CAAC,CACnB,CACF,EACA,QAAS,YACT,MAAO,QACP,WAAY,CACV,MAAO,CAAC,CACN,IAAK,SACP,CAAC,CACH,EACA,WAAW,CACT,eAAAG,CACF,EAAG,CACD,MAAO,CAAC,UAAWC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CACpF,CACF,CAAC","names":["TuiDetails","Node","element","attributes","HTMLAttributes","mergeAttributes","node","editor","wrapper","details","collapseButton","deleteButton","tuiDeleteNode","commands","state","content","tuiGetSelectedContent","dispatch","TuiDetailsContent","TuiSummary"],"x_google_ignoreList":[0]}