{"version":3,"sources":["node_modules/@tinkoff/tui-editor/fesm2015/tinkoff-tui-editor-extensions-enter.js","node_modules/@tiptap/extension-blockquote/dist/index.js","node_modules/@tiptap/extension-bold/dist/index.js","node_modules/@tiptap/extension-bullet-list/dist/index.js","node_modules/@tiptap/extension-code/dist/index.js","node_modules/@tiptap/extension-code-block/dist/index.js","node_modules/@tiptap/extension-document/dist/index.js","node_modules/prosemirror-dropcursor/dist/index.js","node_modules/@tiptap/extension-dropcursor/dist/index.js","node_modules/prosemirror-gapcursor/dist/index.js","node_modules/@tiptap/extension-gapcursor/dist/index.js","node_modules/@tiptap/extension-hard-break/dist/index.js","node_modules/@tiptap/extension-heading/dist/index.js","node_modules/rope-sequence/dist/index.js","node_modules/prosemirror-history/dist/index.js","node_modules/@tiptap/extension-history/dist/index.js","node_modules/@tiptap/extension-horizontal-rule/dist/index.js","node_modules/@tiptap/extension-italic/dist/index.js","node_modules/@tiptap/extension-list-item/dist/index.js","node_modules/@tiptap/extension-ordered-list/dist/index.js","node_modules/@tiptap/extension-paragraph/dist/index.js","node_modules/@tiptap/extension-placeholder/dist/index.js","node_modules/@tiptap/extension-strike/dist/index.js","node_modules/@tiptap/extension-task-item/dist/index.js","node_modules/@tiptap/extension-task-list/dist/index.js","node_modules/@tiptap/extension-text/dist/index.js","node_modules/@tinkoff/tui-editor/fesm2015/tinkoff-tui-editor-extensions-starter-kit.js"],"sourcesContent":["import { Extension } from '@tiptap/core';\nconst TuiCustomEnter = Extension.create({\n  name: `customEnter`,\n  addKeyboardShortcuts() {\n    return {\n      Enter: ({\n        editor\n      }) => {\n        var _a, _b, _c, _d, _e;\n        if (editor.isActive(`summary`)) {\n          editor.commands.selectNodeForward();\n          editor === null || editor === void 0 ? void 0 : editor.commands.focus(((_a = editor === null || editor === void 0 ? void 0 : editor.state.selection.anchor) !== null && _a !== void 0 ? _a : 0) + 1);\n          if (globalThis.document) {\n            (_e = (_d = (_c = (_b = editor.view.nodeDOM(editor.state.selection.anchor)) === null || _b === void 0 ? void 0 : _b.parentElement) === null || _c === void 0 ? void 0 : _c.closest(`details`)) === null || _d === void 0 ? void 0 : _d.querySelector(`[data-type=\"details-content\"]`)) === null || _e === void 0 ? void 0 : _e.prepend(document.createElement(`p`));\n          }\n          return false;\n        }\n        return this.editor.chain().createParagraphNear().run();\n      }\n    };\n  }\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCustomEnter };\n","import { Node, mergeAttributes, wrappingInputRule } from '@tiptap/core';\nconst inputRegex = /^\\s*>\\s$/;\nconst Blockquote = Node.create({\n  name: 'blockquote',\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  content: 'block+',\n  group: 'block',\n  defining: true,\n  parseHTML() {\n    return [{\n      tag: 'blockquote'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      setBlockquote: () => ({\n        commands\n      }) => {\n        return commands.wrapIn(this.name);\n      },\n      toggleBlockquote: () => ({\n        commands\n      }) => {\n        return commands.toggleWrap(this.name);\n      },\n      unsetBlockquote: () => ({\n        commands\n      }) => {\n        return commands.lift(this.name);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-b': () => this.editor.commands.toggleBlockquote()\n    };\n  },\n  addInputRules() {\n    return [wrappingInputRule({\n      find: inputRegex,\n      type: this.type\n    })];\n  }\n});\nexport { Blockquote, Blockquote as default, inputRegex };\n","import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\nconst starInputRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))$/;\nconst starPasteRegex = /(?:^|\\s)((?:\\*\\*)((?:[^*]+))(?:\\*\\*))/g;\nconst underscoreInputRegex = /(?:^|\\s)((?:__)((?:[^__]+))(?:__))$/;\nconst underscorePasteRegex = /(?:^|\\s)((?:__)((?:[^__]+))(?:__))/g;\nconst Bold = Mark.create({\n  name: 'bold',\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  parseHTML() {\n    return [{\n      tag: 'strong'\n    }, {\n      tag: 'b',\n      getAttrs: node => node.style.fontWeight !== 'normal' && null\n    }, {\n      style: 'font-weight',\n      getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['strong', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      setBold: () => ({\n        commands\n      }) => {\n        return commands.setMark(this.name);\n      },\n      toggleBold: () => ({\n        commands\n      }) => {\n        return commands.toggleMark(this.name);\n      },\n      unsetBold: () => ({\n        commands\n      }) => {\n        return commands.unsetMark(this.name);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-b': () => this.editor.commands.toggleBold(),\n      'Mod-B': () => this.editor.commands.toggleBold()\n    };\n  },\n  addInputRules() {\n    return [markInputRule({\n      find: starInputRegex,\n      type: this.type\n    }), markInputRule({\n      find: underscoreInputRegex,\n      type: this.type\n    })];\n  },\n  addPasteRules() {\n    return [markPasteRule({\n      find: starPasteRegex,\n      type: this.type\n    }), markPasteRule({\n      find: underscorePasteRegex,\n      type: this.type\n    })];\n  }\n});\nexport { Bold, Bold as default, starInputRegex, starPasteRegex, underscoreInputRegex, underscorePasteRegex };\n","import { Node, mergeAttributes, Mark, getMarkAttributes, wrappingInputRule } from '@tiptap/core';\nconst ListItem = Node.create({\n  name: 'listItem',\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n      bulletListTypeName: 'bulletList',\n      orderedListTypeName: 'orderedList'\n    };\n  },\n  content: 'paragraph block*',\n  defining: true,\n  parseHTML() {\n    return [{\n      tag: 'li'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name)\n    };\n  }\n});\nconst TextStyle = Mark.create({\n  name: 'textStyle',\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  parseHTML() {\n    return [{\n      tag: 'span',\n      getAttrs: element => {\n        const hasStyles = element.hasAttribute('style');\n        if (!hasStyles) {\n          return false;\n        }\n        return {};\n      }\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['span', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      removeEmptyTextStyle: () => ({\n        state,\n        commands\n      }) => {\n        const attributes = getMarkAttributes(state, this.type);\n        const hasStyles = Object.entries(attributes).some(([, value]) => !!value);\n        if (hasStyles) {\n          return true;\n        }\n        return commands.unsetMark(this.name);\n      }\n    };\n  }\n});\nconst inputRegex = /^\\s*([-+*])\\s$/;\nconst BulletList = Node.create({\n  name: 'bulletList',\n  addOptions() {\n    return {\n      itemTypeName: 'listItem',\n      HTMLAttributes: {},\n      keepMarks: false,\n      keepAttributes: false\n    };\n  },\n  group: 'block list',\n  content() {\n    return `${this.options.itemTypeName}+`;\n  },\n  parseHTML() {\n    return [{\n      tag: 'ul'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['ul', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      toggleBulletList: () => ({\n        commands,\n        chain\n      }) => {\n        if (this.options.keepAttributes) {\n          return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItem.name, this.editor.getAttributes(TextStyle.name)).run();\n        }\n        return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-8': () => this.editor.commands.toggleBulletList()\n    };\n  },\n  addInputRules() {\n    let inputRule = wrappingInputRule({\n      find: inputRegex,\n      type: this.type\n    });\n    if (this.options.keepMarks || this.options.keepAttributes) {\n      inputRule = wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n        keepMarks: this.options.keepMarks,\n        keepAttributes: this.options.keepAttributes,\n        getAttributes: () => {\n          return this.editor.getAttributes(TextStyle.name);\n        },\n        editor: this.editor\n      });\n    }\n    return [inputRule];\n  }\n});\nexport { BulletList, BulletList as default, inputRegex };\n","import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\nconst inputRegex = /(?:^|\\s)((?:`)((?:[^`]+))(?:`))$/;\nconst pasteRegex = /(?:^|\\s)((?:`)((?:[^`]+))(?:`))/g;\nconst Code = Mark.create({\n  name: 'code',\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  excludes: '_',\n  code: true,\n  exitable: true,\n  parseHTML() {\n    return [{\n      tag: 'code'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['code', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      setCode: () => ({\n        commands\n      }) => {\n        return commands.setMark(this.name);\n      },\n      toggleCode: () => ({\n        commands\n      }) => {\n        return commands.toggleMark(this.name);\n      },\n      unsetCode: () => ({\n        commands\n      }) => {\n        return commands.unsetMark(this.name);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-e': () => this.editor.commands.toggleCode()\n    };\n  },\n  addInputRules() {\n    return [markInputRule({\n      find: inputRegex,\n      type: this.type\n    })];\n  },\n  addPasteRules() {\n    return [markPasteRule({\n      find: pasteRegex,\n      type: this.type\n    })];\n  }\n});\nexport { Code, Code as default, inputRegex, pasteRegex };\n","import { Node, mergeAttributes, textblockTypeInputRule } from '@tiptap/core';\nimport { Plugin, PluginKey, TextSelection } from '@tiptap/pm/state';\nconst backtickInputRegex = /^```([a-z]+)?[\\s\\n]$/;\nconst tildeInputRegex = /^~~~([a-z]+)?[\\s\\n]$/;\nconst CodeBlock = Node.create({\n  name: 'codeBlock',\n  addOptions() {\n    return {\n      languageClassPrefix: 'language-',\n      exitOnTripleEnter: true,\n      exitOnArrowDown: true,\n      HTMLAttributes: {}\n    };\n  },\n  content: 'text*',\n  marks: '',\n  group: 'block',\n  code: true,\n  defining: true,\n  addAttributes() {\n    return {\n      language: {\n        default: null,\n        parseHTML: element => {\n          var _a;\n          const {\n            languageClassPrefix\n          } = this.options;\n          const classNames = [...(((_a = element.firstElementChild) === null || _a === void 0 ? void 0 : _a.classList) || [])];\n          const languages = classNames.filter(className => className.startsWith(languageClassPrefix)).map(className => className.replace(languageClassPrefix, ''));\n          const language = languages[0];\n          if (!language) {\n            return null;\n          }\n          return language;\n        },\n        rendered: false\n      }\n    };\n  },\n  parseHTML() {\n    return [{\n      tag: 'pre',\n      preserveWhitespace: 'full'\n    }];\n  },\n  renderHTML({\n    node,\n    HTMLAttributes\n  }) {\n    return ['pre', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), ['code', {\n      class: node.attrs.language ? this.options.languageClassPrefix + node.attrs.language : null\n    }, 0]];\n  },\n  addCommands() {\n    return {\n      setCodeBlock: attributes => ({\n        commands\n      }) => {\n        return commands.setNode(this.name, attributes);\n      },\n      toggleCodeBlock: attributes => ({\n        commands\n      }) => {\n        return commands.toggleNode(this.name, 'paragraph', attributes);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Alt-c': () => this.editor.commands.toggleCodeBlock(),\n      // remove code block when at start of document or code block is empty\n      Backspace: () => {\n        const {\n          empty,\n          $anchor\n        } = this.editor.state.selection;\n        const isAtStart = $anchor.pos === 1;\n        if (!empty || $anchor.parent.type.name !== this.name) {\n          return false;\n        }\n        if (isAtStart || !$anchor.parent.textContent.length) {\n          return this.editor.commands.clearNodes();\n        }\n        return false;\n      },\n      // exit node on triple enter\n      Enter: ({\n        editor\n      }) => {\n        if (!this.options.exitOnTripleEnter) {\n          return false;\n        }\n        const {\n          state\n        } = editor;\n        const {\n          selection\n        } = state;\n        const {\n          $from,\n          empty\n        } = selection;\n        if (!empty || $from.parent.type !== this.type) {\n          return false;\n        }\n        const isAtEnd = $from.parentOffset === $from.parent.nodeSize - 2;\n        const endsWithDoubleNewline = $from.parent.textContent.endsWith('\\n\\n');\n        if (!isAtEnd || !endsWithDoubleNewline) {\n          return false;\n        }\n        return editor.chain().command(({\n          tr\n        }) => {\n          tr.delete($from.pos - 2, $from.pos);\n          return true;\n        }).exitCode().run();\n      },\n      // exit node on arrow down\n      ArrowDown: ({\n        editor\n      }) => {\n        if (!this.options.exitOnArrowDown) {\n          return false;\n        }\n        const {\n          state\n        } = editor;\n        const {\n          selection,\n          doc\n        } = state;\n        const {\n          $from,\n          empty\n        } = selection;\n        if (!empty || $from.parent.type !== this.type) {\n          return false;\n        }\n        const isAtEnd = $from.parentOffset === $from.parent.nodeSize - 2;\n        if (!isAtEnd) {\n          return false;\n        }\n        const after = $from.after();\n        if (after === undefined) {\n          return false;\n        }\n        const nodeAfter = doc.nodeAt(after);\n        if (nodeAfter) {\n          return false;\n        }\n        return editor.commands.exitCode();\n      }\n    };\n  },\n  addInputRules() {\n    return [textblockTypeInputRule({\n      find: backtickInputRegex,\n      type: this.type,\n      getAttributes: match => ({\n        language: match[1]\n      })\n    }), textblockTypeInputRule({\n      find: tildeInputRegex,\n      type: this.type,\n      getAttributes: match => ({\n        language: match[1]\n      })\n    })];\n  },\n  addProseMirrorPlugins() {\n    return [\n    // this plugin creates a code block for pasted content from VS Code\n    // we can also detect the copied code language\n    new Plugin({\n      key: new PluginKey('codeBlockVSCodeHandler'),\n      props: {\n        handlePaste: (view, event) => {\n          if (!event.clipboardData) {\n            return false;\n          }\n          // don’t create a new code block within code blocks\n          if (this.editor.isActive(this.type.name)) {\n            return false;\n          }\n          const text = event.clipboardData.getData('text/plain');\n          const vscode = event.clipboardData.getData('vscode-editor-data');\n          const vscodeData = vscode ? JSON.parse(vscode) : undefined;\n          const language = vscodeData === null || vscodeData === void 0 ? void 0 : vscodeData.mode;\n          if (!text || !language) {\n            return false;\n          }\n          const {\n            tr\n          } = view.state;\n          // create an empty code block\n          tr.replaceSelectionWith(this.type.create({\n            language\n          }));\n          // put cursor inside the newly created code block\n          tr.setSelection(TextSelection.near(tr.doc.resolve(Math.max(0, tr.selection.from - 2))));\n          // add text to code block\n          // strip carriage return chars from text pasted as code\n          // see: https://github.com/ProseMirror/prosemirror-view/commit/a50a6bcceb4ce52ac8fcc6162488d8875613aacd\n          tr.insertText(text.replace(/\\r\\n?/g, '\\n'));\n          // store meta information\n          // this is useful for other plugins that depends on the paste event\n          // like the paste rule plugin\n          tr.setMeta('paste', true);\n          view.dispatch(tr);\n          return true;\n        }\n      }\n    })];\n  }\n});\nexport { CodeBlock, backtickInputRegex, CodeBlock as default, tildeInputRegex };\n","import { Node } from '@tiptap/core';\nconst Document = Node.create({\n  name: 'doc',\n  topNode: true,\n  content: 'block+'\n});\nexport { Document, Document as default };\n","import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n  return new Plugin({\n    view(editorView) {\n      return new DropCursorView(editorView, options);\n    }\n  });\n}\nclass DropCursorView {\n  constructor(editorView, options) {\n    var _a;\n    this.editorView = editorView;\n    this.cursorPos = null;\n    this.element = null;\n    this.timeout = -1;\n    this.width = (_a = options.width) !== null && _a !== void 0 ? _a : 1;\n    this.color = options.color === false ? undefined : options.color || \"black\";\n    this.class = options.class;\n    this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n      let handler = e => {\n        this[name](e);\n      };\n      editorView.dom.addEventListener(name, handler);\n      return {\n        name,\n        handler\n      };\n    });\n  }\n  destroy() {\n    this.handlers.forEach(({\n      name,\n      handler\n    }) => this.editorView.dom.removeEventListener(name, handler));\n  }\n  update(editorView, prevState) {\n    if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n      if (this.cursorPos > editorView.state.doc.content.size) this.setCursor(null);else this.updateOverlay();\n    }\n  }\n  setCursor(pos) {\n    if (pos == this.cursorPos) return;\n    this.cursorPos = pos;\n    if (pos == null) {\n      this.element.parentNode.removeChild(this.element);\n      this.element = null;\n    } else {\n      this.updateOverlay();\n    }\n  }\n  updateOverlay() {\n    let $pos = this.editorView.state.doc.resolve(this.cursorPos);\n    let isBlock = !$pos.parent.inlineContent,\n      rect;\n    if (isBlock) {\n      let before = $pos.nodeBefore,\n        after = $pos.nodeAfter;\n      if (before || after) {\n        let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n        if (node) {\n          let nodeRect = node.getBoundingClientRect();\n          let top = before ? nodeRect.bottom : nodeRect.top;\n          if (before && after) top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n          rect = {\n            left: nodeRect.left,\n            right: nodeRect.right,\n            top: top - this.width / 2,\n            bottom: top + this.width / 2\n          };\n        }\n      }\n    }\n    if (!rect) {\n      let coords = this.editorView.coordsAtPos(this.cursorPos);\n      rect = {\n        left: coords.left - this.width / 2,\n        right: coords.left + this.width / 2,\n        top: coords.top,\n        bottom: coords.bottom\n      };\n    }\n    let parent = this.editorView.dom.offsetParent;\n    if (!this.element) {\n      this.element = parent.appendChild(document.createElement(\"div\"));\n      if (this.class) this.element.className = this.class;\n      this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none;\";\n      if (this.color) {\n        this.element.style.backgroundColor = this.color;\n      }\n    }\n    this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n    this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n    let parentLeft, parentTop;\n    if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n      parentLeft = -pageXOffset;\n      parentTop = -pageYOffset;\n    } else {\n      let rect = parent.getBoundingClientRect();\n      parentLeft = rect.left - parent.scrollLeft;\n      parentTop = rect.top - parent.scrollTop;\n    }\n    this.element.style.left = rect.left - parentLeft + \"px\";\n    this.element.style.top = rect.top - parentTop + \"px\";\n    this.element.style.width = rect.right - rect.left + \"px\";\n    this.element.style.height = rect.bottom - rect.top + \"px\";\n  }\n  scheduleRemoval(timeout) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => this.setCursor(null), timeout);\n  }\n  dragover(event) {\n    if (!this.editorView.editable) return;\n    let pos = this.editorView.posAtCoords({\n      left: event.clientX,\n      top: event.clientY\n    });\n    let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n    let disableDropCursor = node && node.type.spec.disableDropCursor;\n    let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n    if (pos && !disabled) {\n      let target = pos.pos;\n      if (this.editorView.dragging && this.editorView.dragging.slice) {\n        let point = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n        if (point != null) target = point;\n      }\n      this.setCursor(target);\n      this.scheduleRemoval(5000);\n    }\n  }\n  dragend() {\n    this.scheduleRemoval(20);\n  }\n  drop() {\n    this.scheduleRemoval(20);\n  }\n  dragleave(event) {\n    if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget)) this.setCursor(null);\n  }\n}\nexport { dropCursor };","import { Extension } from '@tiptap/core';\nimport { dropCursor } from '@tiptap/pm/dropcursor';\nconst Dropcursor = Extension.create({\n  name: 'dropCursor',\n  addOptions() {\n    return {\n      color: 'currentColor',\n      width: 1,\n      class: undefined\n    };\n  },\n  addProseMirrorPlugins() {\n    return [dropCursor(this.options)];\n  }\n});\nexport { Dropcursor, Dropcursor as default };\n","import { keydownHandler } from 'prosemirror-keymap';\nimport { Selection, NodeSelection, TextSelection, Plugin } from 'prosemirror-state';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { DecorationSet, Decoration } from 'prosemirror-view';\n\n/**\nGap cursor selections are represented using this class. Its\n`$anchor` and `$head` properties both point at the cursor position.\n*/\nclass GapCursor extends Selection {\n  /**\n  Create a gap cursor.\n  */\n  constructor($pos) {\n    super($pos, $pos);\n  }\n  map(doc, mapping) {\n    let $pos = doc.resolve(mapping.map(this.head));\n    return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n  }\n  content() {\n    return Slice.empty;\n  }\n  eq(other) {\n    return other instanceof GapCursor && other.head == this.head;\n  }\n  toJSON() {\n    return {\n      type: \"gapcursor\",\n      pos: this.head\n    };\n  }\n  /**\n  @internal\n  */\n  static fromJSON(doc, json) {\n    if (typeof json.pos != \"number\") throw new RangeError(\"Invalid input for GapCursor.fromJSON\");\n    return new GapCursor(doc.resolve(json.pos));\n  }\n  /**\n  @internal\n  */\n  getBookmark() {\n    return new GapBookmark(this.anchor);\n  }\n  /**\n  @internal\n  */\n  static valid($pos) {\n    let parent = $pos.parent;\n    if (parent.isTextblock || !closedBefore($pos) || !closedAfter($pos)) return false;\n    let override = parent.type.spec.allowGapCursor;\n    if (override != null) return override;\n    let deflt = parent.contentMatchAt($pos.index()).defaultType;\n    return deflt && deflt.isTextblock;\n  }\n  /**\n  @internal\n  */\n  static findGapCursorFrom($pos, dir, mustMove = false) {\n    search: for (;;) {\n      if (!mustMove && GapCursor.valid($pos)) return $pos;\n      let pos = $pos.pos,\n        next = null;\n      // Scan up from this position\n      for (let d = $pos.depth;; d--) {\n        let parent = $pos.node(d);\n        if (dir > 0 ? $pos.indexAfter(d) < parent.childCount : $pos.index(d) > 0) {\n          next = parent.child(dir > 0 ? $pos.indexAfter(d) : $pos.index(d) - 1);\n          break;\n        } else if (d == 0) {\n          return null;\n        }\n        pos += dir;\n        let $cur = $pos.doc.resolve(pos);\n        if (GapCursor.valid($cur)) return $cur;\n      }\n      // And then down into the next node\n      for (;;) {\n        let inside = dir > 0 ? next.firstChild : next.lastChild;\n        if (!inside) {\n          if (next.isAtom && !next.isText && !NodeSelection.isSelectable(next)) {\n            $pos = $pos.doc.resolve(pos + next.nodeSize * dir);\n            mustMove = false;\n            continue search;\n          }\n          break;\n        }\n        next = inside;\n        pos += dir;\n        let $cur = $pos.doc.resolve(pos);\n        if (GapCursor.valid($cur)) return $cur;\n      }\n      return null;\n    }\n  }\n}\nGapCursor.prototype.visible = false;\nGapCursor.findFrom = GapCursor.findGapCursorFrom;\nSelection.jsonID(\"gapcursor\", GapCursor);\nclass GapBookmark {\n  constructor(pos) {\n    this.pos = pos;\n  }\n  map(mapping) {\n    return new GapBookmark(mapping.map(this.pos));\n  }\n  resolve(doc) {\n    let $pos = doc.resolve(this.pos);\n    return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n  }\n}\nfunction closedBefore($pos) {\n  for (let d = $pos.depth; d >= 0; d--) {\n    let index = $pos.index(d),\n      parent = $pos.node(d);\n    // At the start of this parent, look at next one\n    if (index == 0) {\n      if (parent.type.spec.isolating) return true;\n      continue;\n    }\n    // See if the node before (or its first ancestor) is closed\n    for (let before = parent.child(index - 1);; before = before.lastChild) {\n      if (before.childCount == 0 && !before.inlineContent || before.isAtom || before.type.spec.isolating) return true;\n      if (before.inlineContent) return false;\n    }\n  }\n  // Hit start of document\n  return true;\n}\nfunction closedAfter($pos) {\n  for (let d = $pos.depth; d >= 0; d--) {\n    let index = $pos.indexAfter(d),\n      parent = $pos.node(d);\n    if (index == parent.childCount) {\n      if (parent.type.spec.isolating) return true;\n      continue;\n    }\n    for (let after = parent.child(index);; after = after.firstChild) {\n      if (after.childCount == 0 && !after.inlineContent || after.isAtom || after.type.spec.isolating) return true;\n      if (after.inlineContent) return false;\n    }\n  }\n  return true;\n}\n\n/**\nCreate a gap cursor plugin. When enabled, this will capture clicks\nnear and arrow-key-motion past places that don't have a normally\nselectable position nearby, and create a gap cursor selection for\nthem. The cursor is drawn as an element with class\n`ProseMirror-gapcursor`. You can either include\n`style/gapcursor.css` from the package's directory or add your own\nstyles to make it visible.\n*/\nfunction gapCursor() {\n  return new Plugin({\n    props: {\n      decorations: drawGapCursor,\n      createSelectionBetween(_view, $anchor, $head) {\n        return $anchor.pos == $head.pos && GapCursor.valid($head) ? new GapCursor($head) : null;\n      },\n      handleClick,\n      handleKeyDown,\n      handleDOMEvents: {\n        beforeinput: beforeinput\n      }\n    }\n  });\n}\nconst handleKeyDown = keydownHandler({\n  \"ArrowLeft\": arrow(\"horiz\", -1),\n  \"ArrowRight\": arrow(\"horiz\", 1),\n  \"ArrowUp\": arrow(\"vert\", -1),\n  \"ArrowDown\": arrow(\"vert\", 1)\n});\nfunction arrow(axis, dir) {\n  const dirStr = axis == \"vert\" ? dir > 0 ? \"down\" : \"up\" : dir > 0 ? \"right\" : \"left\";\n  return function (state, dispatch, view) {\n    let sel = state.selection;\n    let $start = dir > 0 ? sel.$to : sel.$from,\n      mustMove = sel.empty;\n    if (sel instanceof TextSelection) {\n      if (!view.endOfTextblock(dirStr) || $start.depth == 0) return false;\n      mustMove = false;\n      $start = state.doc.resolve(dir > 0 ? $start.after() : $start.before());\n    }\n    let $found = GapCursor.findGapCursorFrom($start, dir, mustMove);\n    if (!$found) return false;\n    if (dispatch) dispatch(state.tr.setSelection(new GapCursor($found)));\n    return true;\n  };\n}\nfunction handleClick(view, pos, event) {\n  if (!view || !view.editable) return false;\n  let $pos = view.state.doc.resolve(pos);\n  if (!GapCursor.valid($pos)) return false;\n  let clickPos = view.posAtCoords({\n    left: event.clientX,\n    top: event.clientY\n  });\n  if (clickPos && clickPos.inside > -1 && NodeSelection.isSelectable(view.state.doc.nodeAt(clickPos.inside))) return false;\n  view.dispatch(view.state.tr.setSelection(new GapCursor($pos)));\n  return true;\n}\n// This is a hack that, when a composition starts while a gap cursor\n// is active, quickly creates an inline context for the composition to\n// happen in, to avoid it being aborted by the DOM selection being\n// moved into a valid position.\nfunction beforeinput(view, event) {\n  if (event.inputType != \"insertCompositionText\" || !(view.state.selection instanceof GapCursor)) return false;\n  let {\n    $from\n  } = view.state.selection;\n  let insert = $from.parent.contentMatchAt($from.index()).findWrapping(view.state.schema.nodes.text);\n  if (!insert) return false;\n  let frag = Fragment.empty;\n  for (let i = insert.length - 1; i >= 0; i--) frag = Fragment.from(insert[i].createAndFill(null, frag));\n  let tr = view.state.tr.replace($from.pos, $from.pos, new Slice(frag, 0, 0));\n  tr.setSelection(TextSelection.near(tr.doc.resolve($from.pos + 1)));\n  view.dispatch(tr);\n  return false;\n}\nfunction drawGapCursor(state) {\n  if (!(state.selection instanceof GapCursor)) return null;\n  let node = document.createElement(\"div\");\n  node.className = \"ProseMirror-gapcursor\";\n  return DecorationSet.create(state.doc, [Decoration.widget(state.selection.head, node, {\n    key: \"gapcursor\"\n  })]);\n}\nexport { GapCursor, gapCursor };","import { Extension, callOrReturn, getExtensionField } from '@tiptap/core';\nimport { gapCursor } from '@tiptap/pm/gapcursor';\nconst Gapcursor = Extension.create({\n  name: 'gapCursor',\n  addProseMirrorPlugins() {\n    return [gapCursor()];\n  },\n  extendNodeSchema(extension) {\n    var _a;\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage\n    };\n    return {\n      allowGapCursor: (_a = callOrReturn(getExtensionField(extension, 'allowGapCursor', context))) !== null && _a !== void 0 ? _a : null\n    };\n  }\n});\nexport { Gapcursor, Gapcursor as default };\n","import { Node, mergeAttributes } from '@tiptap/core';\nconst HardBreak = Node.create({\n  name: 'hardBreak',\n  addOptions() {\n    return {\n      keepMarks: true,\n      HTMLAttributes: {}\n    };\n  },\n  inline: true,\n  group: 'inline',\n  selectable: false,\n  parseHTML() {\n    return [{\n      tag: 'br'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\n  },\n  renderText() {\n    return '\\n';\n  },\n  addCommands() {\n    return {\n      setHardBreak: () => ({\n        commands,\n        chain,\n        state,\n        editor\n      }) => {\n        return commands.first([() => commands.exitCode(), () => commands.command(() => {\n          const {\n            selection,\n            storedMarks\n          } = state;\n          if (selection.$from.parent.type.spec.isolating) {\n            return false;\n          }\n          const {\n            keepMarks\n          } = this.options;\n          const {\n            splittableMarks\n          } = editor.extensionManager;\n          const marks = storedMarks || selection.$to.parentOffset && selection.$from.marks();\n          return chain().insertContent({\n            type: this.name\n          }).command(({\n            tr,\n            dispatch\n          }) => {\n            if (dispatch && marks && keepMarks) {\n              const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name));\n              tr.ensureMarks(filteredMarks);\n            }\n            return true;\n          }).run();\n        })]);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Enter': () => this.editor.commands.setHardBreak(),\n      'Shift-Enter': () => this.editor.commands.setHardBreak()\n    };\n  }\n});\nexport { HardBreak, HardBreak as default };\n","import { Node, mergeAttributes, textblockTypeInputRule } from '@tiptap/core';\nconst Heading = Node.create({\n  name: 'heading',\n  addOptions() {\n    return {\n      levels: [1, 2, 3, 4, 5, 6],\n      HTMLAttributes: {}\n    };\n  },\n  content: 'inline*',\n  group: 'block',\n  defining: true,\n  addAttributes() {\n    return {\n      level: {\n        default: 1,\n        rendered: false\n      }\n    };\n  },\n  parseHTML() {\n    return this.options.levels.map(level => ({\n      tag: `h${level}`,\n      attrs: {\n        level\n      }\n    }));\n  },\n  renderHTML({\n    node,\n    HTMLAttributes\n  }) {\n    const hasLevel = this.options.levels.includes(node.attrs.level);\n    const level = hasLevel ? node.attrs.level : this.options.levels[0];\n    return [`h${level}`, mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      setHeading: attributes => ({\n        commands\n      }) => {\n        if (!this.options.levels.includes(attributes.level)) {\n          return false;\n        }\n        return commands.setNode(this.name, attributes);\n      },\n      toggleHeading: attributes => ({\n        commands\n      }) => {\n        if (!this.options.levels.includes(attributes.level)) {\n          return false;\n        }\n        return commands.toggleNode(this.name, 'paragraph', attributes);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return this.options.levels.reduce((items, level) => ({\n      ...items,\n      ...{\n        [`Mod-Alt-${level}`]: () => this.editor.commands.toggleHeading({\n          level\n        })\n      }\n    }), {});\n  },\n  addInputRules() {\n    return this.options.levels.map(level => {\n      return textblockTypeInputRule({\n        find: new RegExp(`^(#{1,${level}})\\\\s$`),\n        type: this.type,\n        getAttributes: {\n          level\n        }\n      });\n    });\n  }\n});\nexport { Heading, Heading as default };\n","var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence() {};\nRopeSequence.prototype.append = function append(other) {\n  if (!other.length) {\n    return this;\n  }\n  other = RopeSequence.from(other);\n  return !this.length && other || other.length < GOOD_LEAF_SIZE && this.leafAppend(other) || this.length < GOOD_LEAF_SIZE && other.leafPrepend(this) || this.appendInner(other);\n};\n\n// :: (union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend(other) {\n  if (!other.length) {\n    return this;\n  }\n  return RopeSequence.from(other).append(this);\n};\nRopeSequence.prototype.appendInner = function appendInner(other) {\n  return new Append(this, other);\n};\n\n// :: (?number, ?number) → RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice(from, to) {\n  if (from === void 0) from = 0;\n  if (to === void 0) to = this.length;\n  if (from >= to) {\n    return RopeSequence.empty;\n  }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to));\n};\n\n// :: (number) → T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get(i) {\n  if (i < 0 || i >= this.length) {\n    return undefined;\n  }\n  return this.getInner(i);\n};\n\n// :: ((element: T, index: number) → ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach(f, from, to) {\n  if (from === void 0) from = 0;\n  if (to === void 0) to = this.length;\n  if (from <= to) {\n    this.forEachInner(f, from, to, 0);\n  } else {\n    this.forEachInvertedInner(f, from, to, 0);\n  }\n};\n\n// :: ((element: T, index: number) → U, ?number, ?number) → [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map(f, from, to) {\n  if (from === void 0) from = 0;\n  if (to === void 0) to = this.length;\n  var result = [];\n  this.forEach(function (elt, i) {\n    return result.push(f(elt, i));\n  }, from, to);\n  return result;\n};\n\n// :: (?union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from(values) {\n  if (values instanceof RopeSequence) {\n    return values;\n  }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty;\n};\nvar Leaf = /*@__PURE__*/function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n  if (RopeSequence) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create(RopeSequence && RopeSequence.prototype);\n  Leaf.prototype.constructor = Leaf;\n  var prototypeAccessors = {\n    length: {\n      configurable: true\n    },\n    depth: {\n      configurable: true\n    }\n  };\n  Leaf.prototype.flatten = function flatten() {\n    return this.values;\n  };\n  Leaf.prototype.sliceInner = function sliceInner(from, to) {\n    if (from == 0 && to == this.length) {\n      return this;\n    }\n    return new Leaf(this.values.slice(from, to));\n  };\n  Leaf.prototype.getInner = function getInner(i) {\n    return this.values[i];\n  };\n  Leaf.prototype.forEachInner = function forEachInner(f, from, to, start) {\n    for (var i = from; i < to; i++) {\n      if (f(this.values[i], start + i) === false) {\n        return false;\n      }\n    }\n  };\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner(f, from, to, start) {\n    for (var i = from - 1; i >= to; i--) {\n      if (f(this.values[i], start + i) === false) {\n        return false;\n      }\n    }\n  };\n  Leaf.prototype.leafAppend = function leafAppend(other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE) {\n      return new Leaf(this.values.concat(other.flatten()));\n    }\n  };\n  Leaf.prototype.leafPrepend = function leafPrepend(other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE) {\n      return new Leaf(other.flatten().concat(this.values));\n    }\n  };\n  prototypeAccessors.length.get = function () {\n    return this.values.length;\n  };\n  prototypeAccessors.depth.get = function () {\n    return 0;\n  };\n  Object.defineProperties(Leaf.prototype, prototypeAccessors);\n  return Leaf;\n}(RopeSequence);\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\nvar Append = /*@__PURE__*/function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n  if (RopeSequence) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create(RopeSequence && RopeSequence.prototype);\n  Append.prototype.constructor = Append;\n  Append.prototype.flatten = function flatten() {\n    return this.left.flatten().concat(this.right.flatten());\n  };\n  Append.prototype.getInner = function getInner(i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length);\n  };\n  Append.prototype.forEachInner = function forEachInner(f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen && this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false) {\n      return false;\n    }\n    if (to > leftLen && this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false) {\n      return false;\n    }\n  };\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner(f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen && this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false) {\n      return false;\n    }\n    if (to < leftLen && this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false) {\n      return false;\n    }\n  };\n  Append.prototype.sliceInner = function sliceInner(from, to) {\n    if (from == 0 && to == this.length) {\n      return this;\n    }\n    var leftLen = this.left.length;\n    if (to <= leftLen) {\n      return this.left.slice(from, to);\n    }\n    if (from >= leftLen) {\n      return this.right.slice(from - leftLen, to - leftLen);\n    }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen));\n  };\n  Append.prototype.leafAppend = function leafAppend(other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) {\n      return new Append(this.left, inner);\n    }\n  };\n  Append.prototype.leafPrepend = function leafPrepend(other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) {\n      return new Append(inner, this.right);\n    }\n  };\n  Append.prototype.appendInner = function appendInner(other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1) {\n      return new Append(this.left, new Append(this.right, other));\n    }\n    return new Append(this, other);\n  };\n  return Append;\n}(RopeSequence);\nexport default RopeSequence;","import RopeSequence from 'rope-sequence';\nimport { Mapping } from 'prosemirror-transform';\nimport { PluginKey, Plugin } from 'prosemirror-state';\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n// Used to schedule history compression\nconst max_empty_items = 500;\nclass Branch {\n  constructor(items, eventCount) {\n    this.items = items;\n    this.eventCount = eventCount;\n  }\n  // Pop the latest event off the branch's history and apply it\n  // to a document transform.\n  popEvent(state, preserveItems) {\n    if (this.eventCount == 0) return null;\n    let end = this.items.length;\n    for (;; end--) {\n      let next = this.items.get(end - 1);\n      if (next.selection) {\n        --end;\n        break;\n      }\n    }\n    let remap, mapFrom;\n    if (preserveItems) {\n      remap = this.remapping(end, this.items.length);\n      mapFrom = remap.maps.length;\n    }\n    let transform = state.tr;\n    let selection, remaining;\n    let addAfter = [],\n      addBefore = [];\n    this.items.forEach((item, i) => {\n      if (!item.step) {\n        if (!remap) {\n          remap = this.remapping(end, i + 1);\n          mapFrom = remap.maps.length;\n        }\n        mapFrom--;\n        addBefore.push(item);\n        return;\n      }\n      if (remap) {\n        addBefore.push(new Item(item.map));\n        let step = item.step.map(remap.slice(mapFrom)),\n          map;\n        if (step && transform.maybeStep(step).doc) {\n          map = transform.mapping.maps[transform.mapping.maps.length - 1];\n          addAfter.push(new Item(map, undefined, undefined, addAfter.length + addBefore.length));\n        }\n        mapFrom--;\n        if (map) remap.appendMap(map, mapFrom);\n      } else {\n        transform.maybeStep(item.step);\n      }\n      if (item.selection) {\n        selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection;\n        remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1);\n        return false;\n      }\n    }, this.items.length, 0);\n    return {\n      remaining: remaining,\n      transform,\n      selection: selection\n    };\n  }\n  // Create a new branch with the given transform added.\n  addTransform(transform, selection, histOptions, preserveItems) {\n    let newItems = [],\n      eventCount = this.eventCount;\n    let oldItems = this.items,\n      lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null;\n    for (let i = 0; i < transform.steps.length; i++) {\n      let step = transform.steps[i].invert(transform.docs[i]);\n      let item = new Item(transform.mapping.maps[i], step, selection),\n        merged;\n      if (merged = lastItem && lastItem.merge(item)) {\n        item = merged;\n        if (i) newItems.pop();else oldItems = oldItems.slice(0, oldItems.length - 1);\n      }\n      newItems.push(item);\n      if (selection) {\n        eventCount++;\n        selection = undefined;\n      }\n      if (!preserveItems) lastItem = item;\n    }\n    let overflow = eventCount - histOptions.depth;\n    if (overflow > DEPTH_OVERFLOW) {\n      oldItems = cutOffEvents(oldItems, overflow);\n      eventCount -= overflow;\n    }\n    return new Branch(oldItems.append(newItems), eventCount);\n  }\n  remapping(from, to) {\n    let maps = new Mapping();\n    this.items.forEach((item, i) => {\n      let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from ? maps.maps.length - item.mirrorOffset : undefined;\n      maps.appendMap(item.map, mirrorPos);\n    }, from, to);\n    return maps;\n  }\n  addMaps(array) {\n    if (this.eventCount == 0) return this;\n    return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount);\n  }\n  // When the collab module receives remote changes, the history has\n  // to know about those, so that it can adjust the steps that were\n  // rebased on top of the remote changes, and include the position\n  // maps for the remote changes in its array of items.\n  rebased(rebasedTransform, rebasedCount) {\n    if (!this.eventCount) return this;\n    let rebasedItems = [],\n      start = Math.max(0, this.items.length - rebasedCount);\n    let mapping = rebasedTransform.mapping;\n    let newUntil = rebasedTransform.steps.length;\n    let eventCount = this.eventCount;\n    this.items.forEach(item => {\n      if (item.selection) eventCount--;\n    }, start);\n    let iRebased = rebasedCount;\n    this.items.forEach(item => {\n      let pos = mapping.getMirror(--iRebased);\n      if (pos == null) return;\n      newUntil = Math.min(newUntil, pos);\n      let map = mapping.maps[pos];\n      if (item.step) {\n        let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos]);\n        let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos));\n        if (selection) eventCount++;\n        rebasedItems.push(new Item(map, step, selection));\n      } else {\n        rebasedItems.push(new Item(map));\n      }\n    }, start);\n    let newMaps = [];\n    for (let i = rebasedCount; i < newUntil; i++) newMaps.push(new Item(mapping.maps[i]));\n    let items = this.items.slice(0, start).append(newMaps).append(rebasedItems);\n    let branch = new Branch(items, eventCount);\n    if (branch.emptyItemCount() > max_empty_items) branch = branch.compress(this.items.length - rebasedItems.length);\n    return branch;\n  }\n  emptyItemCount() {\n    let count = 0;\n    this.items.forEach(item => {\n      if (!item.step) count++;\n    });\n    return count;\n  }\n  // Compressing a branch means rewriting it to push the air (map-only\n  // items) out. During collaboration, these naturally accumulate\n  // because each remote change adds one. The `upto` argument is used\n  // to ensure that only the items below a given level are compressed,\n  // because `rebased` relies on a clean, untouched set of items in\n  // order to associate old items with rebased steps.\n  compress(upto = this.items.length) {\n    let remap = this.remapping(0, upto),\n      mapFrom = remap.maps.length;\n    let items = [],\n      events = 0;\n    this.items.forEach((item, i) => {\n      if (i >= upto) {\n        items.push(item);\n        if (item.selection) events++;\n      } else if (item.step) {\n        let step = item.step.map(remap.slice(mapFrom)),\n          map = step && step.getMap();\n        mapFrom--;\n        if (map) remap.appendMap(map, mapFrom);\n        if (step) {\n          let selection = item.selection && item.selection.map(remap.slice(mapFrom));\n          if (selection) events++;\n          let newItem = new Item(map.invert(), step, selection),\n            merged,\n            last = items.length - 1;\n          if (merged = items.length && items[last].merge(newItem)) items[last] = merged;else items.push(newItem);\n        }\n      } else if (item.map) {\n        mapFrom--;\n      }\n    }, this.items.length, 0);\n    return new Branch(RopeSequence.from(items.reverse()), events);\n  }\n}\nBranch.empty = new Branch(RopeSequence.empty, 0);\nfunction cutOffEvents(items, n) {\n  let cutPoint;\n  items.forEach((item, i) => {\n    if (item.selection && n-- == 0) {\n      cutPoint = i;\n      return false;\n    }\n  });\n  return items.slice(cutPoint);\n}\nclass Item {\n  constructor(\n  // The (forward) step map for this item.\n  map,\n  // The inverted step\n  step,\n  // If this is non-null, this item is the start of a group, and\n  // this selection is the starting selection for the group (the one\n  // that was active before the first step was applied)\n  selection,\n  // If this item is the inverse of a previous mapping on the stack,\n  // this points at the inverse's offset\n  mirrorOffset) {\n    this.map = map;\n    this.step = step;\n    this.selection = selection;\n    this.mirrorOffset = mirrorOffset;\n  }\n  merge(other) {\n    if (this.step && other.step && !other.selection) {\n      let step = other.step.merge(this.step);\n      if (step) return new Item(step.getMap().invert(), step, this.selection);\n    }\n  }\n}\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nclass HistoryState {\n  constructor(done, undone, prevRanges, prevTime, prevComposition) {\n    this.done = done;\n    this.undone = undone;\n    this.prevRanges = prevRanges;\n    this.prevTime = prevTime;\n    this.prevComposition = prevComposition;\n  }\n}\nconst DEPTH_OVERFLOW = 20;\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n  let historyTr = tr.getMeta(historyKey),\n    rebased;\n  if (historyTr) return historyTr.historyState;\n  if (tr.getMeta(closeHistoryKey)) history = new HistoryState(history.done, history.undone, null, 0, -1);\n  let appended = tr.getMeta(\"appendedTransaction\");\n  if (tr.steps.length == 0) {\n    return history;\n  } else if (appended && appended.getMeta(historyKey)) {\n    if (appended.getMeta(historyKey).redo) return new HistoryState(history.done.addTransform(tr, undefined, options, mustPreserveItems(state)), history.undone, rangesFor(tr.mapping.maps[tr.steps.length - 1]), history.prevTime, history.prevComposition);else return new HistoryState(history.done, history.undone.addTransform(tr, undefined, options, mustPreserveItems(state)), null, history.prevTime, history.prevComposition);\n  } else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n    // Group transforms that occur in quick succession into one event.\n    let composition = tr.getMeta(\"composition\");\n    let newGroup = history.prevTime == 0 || !appended && history.prevComposition != composition && (history.prevTime < (tr.time || 0) - options.newGroupDelay || !isAdjacentTo(tr, history.prevRanges));\n    let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps[tr.steps.length - 1]);\n    return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : undefined, options, mustPreserveItems(state)), Branch.empty, prevRanges, tr.time, composition == null ? history.prevComposition : composition);\n  } else if (rebased = tr.getMeta(\"rebased\")) {\n    // Used by the collab module to tell the history that some of its\n    // content has been rebased.\n    return new HistoryState(history.done.rebased(tr, rebased), history.undone.rebased(tr, rebased), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n  } else {\n    return new HistoryState(history.done.addMaps(tr.mapping.maps), history.undone.addMaps(tr.mapping.maps), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n  }\n}\nfunction isAdjacentTo(transform, prevRanges) {\n  if (!prevRanges) return false;\n  if (!transform.docChanged) return true;\n  let adjacent = false;\n  transform.mapping.maps[0].forEach((start, end) => {\n    for (let i = 0; i < prevRanges.length; i += 2) if (start <= prevRanges[i + 1] && end >= prevRanges[i]) adjacent = true;\n  });\n  return adjacent;\n}\nfunction rangesFor(map) {\n  let result = [];\n  map.forEach((_from, _to, from, to) => result.push(from, to));\n  return result;\n}\nfunction mapRanges(ranges, mapping) {\n  if (!ranges) return null;\n  let result = [];\n  for (let i = 0; i < ranges.length; i += 2) {\n    let from = mapping.map(ranges[i], 1),\n      to = mapping.map(ranges[i + 1], -1);\n    if (from <= to) result.push(from, to);\n  }\n  return result;\n}\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, dispatch, redo) {\n  let preserveItems = mustPreserveItems(state);\n  let histOptions = historyKey.get(state).spec.config;\n  let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems);\n  if (!pop) return;\n  let selection = pop.selection.resolve(pop.transform.doc);\n  let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(), histOptions, preserveItems);\n  let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0, -1);\n  dispatch(pop.transform.setSelection(selection).setMeta(historyKey, {\n    redo,\n    historyState: newHist\n  }).scrollIntoView());\n}\nlet cachedPreserveItems = false,\n  cachedPreserveItemsPlugins = null;\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n  let plugins = state.plugins;\n  if (cachedPreserveItemsPlugins != plugins) {\n    cachedPreserveItems = false;\n    cachedPreserveItemsPlugins = plugins;\n    for (let i = 0; i < plugins.length; i++) if (plugins[i].spec.historyPreserveItems) {\n      cachedPreserveItems = true;\n      break;\n    }\n  }\n  return cachedPreserveItems;\n}\n/**\nSet a flag on the given transaction that will prevent further steps\nfrom being appended to an existing history event (so that they\nrequire a separate undo command to undo).\n*/\nfunction closeHistory(tr) {\n  return tr.setMeta(closeHistoryKey, true);\n}\nconst historyKey = new PluginKey(\"history\");\nconst closeHistoryKey = new PluginKey(\"closeHistory\");\n/**\nReturns a plugin that enables the undo history for an editor. The\nplugin will track undo and redo stacks, which can be used with the\n[`undo`](https://prosemirror.net/docs/ref/#history.undo) and [`redo`](https://prosemirror.net/docs/ref/#history.redo) commands.\n\nYou can set an `\"addToHistory\"` [metadata\nproperty](https://prosemirror.net/docs/ref/#state.Transaction.setMeta) of `false` on a transaction\nto prevent it from being rolled back by undo.\n*/\nfunction history(config = {}) {\n  config = {\n    depth: config.depth || 100,\n    newGroupDelay: config.newGroupDelay || 500\n  };\n  return new Plugin({\n    key: historyKey,\n    state: {\n      init() {\n        return new HistoryState(Branch.empty, Branch.empty, null, 0, -1);\n      },\n      apply(tr, hist, state) {\n        return applyTransaction(hist, state, tr, config);\n      }\n    },\n    config,\n    props: {\n      handleDOMEvents: {\n        beforeinput(view, e) {\n          let inputType = e.inputType;\n          let command = inputType == \"historyUndo\" ? undo : inputType == \"historyRedo\" ? redo : null;\n          if (!command) return false;\n          e.preventDefault();\n          return command(view.state, view.dispatch);\n        }\n      }\n    }\n  });\n}\n/**\nA command function that undoes the last change, if any.\n*/\nconst undo = (state, dispatch) => {\n  let hist = historyKey.getState(state);\n  if (!hist || hist.done.eventCount == 0) return false;\n  if (dispatch) histTransaction(hist, state, dispatch, false);\n  return true;\n};\n/**\nA command function that redoes the last undone change, if any.\n*/\nconst redo = (state, dispatch) => {\n  let hist = historyKey.getState(state);\n  if (!hist || hist.undone.eventCount == 0) return false;\n  if (dispatch) histTransaction(hist, state, dispatch, true);\n  return true;\n};\n/**\nThe amount of undoable events available in a given state.\n*/\nfunction undoDepth(state) {\n  let hist = historyKey.getState(state);\n  return hist ? hist.done.eventCount : 0;\n}\n/**\nThe amount of redoable events available in a given editor state.\n*/\nfunction redoDepth(state) {\n  let hist = historyKey.getState(state);\n  return hist ? hist.undone.eventCount : 0;\n}\nexport { closeHistory, history, redo, redoDepth, undo, undoDepth };","import { Extension } from '@tiptap/core';\nimport { undo, redo, history } from '@tiptap/pm/history';\nconst History = Extension.create({\n  name: 'history',\n  addOptions() {\n    return {\n      depth: 100,\n      newGroupDelay: 500\n    };\n  },\n  addCommands() {\n    return {\n      undo: () => ({\n        state,\n        dispatch\n      }) => {\n        return undo(state, dispatch);\n      },\n      redo: () => ({\n        state,\n        dispatch\n      }) => {\n        return redo(state, dispatch);\n      }\n    };\n  },\n  addProseMirrorPlugins() {\n    return [history(this.options)];\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Mod-Z': () => this.editor.commands.undo(),\n      'Mod-y': () => this.editor.commands.redo(),\n      'Mod-Y': () => this.editor.commands.redo(),\n      'Shift-Mod-z': () => this.editor.commands.redo(),\n      'Shift-Mod-Z': () => this.editor.commands.redo(),\n      // Russian keyboard layouts\n      'Mod-я': () => this.editor.commands.undo(),\n      'Shift-Mod-я': () => this.editor.commands.redo()\n    };\n  }\n});\nexport { History, History as default };\n","import { Node, mergeAttributes, nodeInputRule } from '@tiptap/core';\nimport { TextSelection, NodeSelection } from '@tiptap/pm/state';\nconst HorizontalRule = Node.create({\n  name: 'horizontalRule',\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  group: 'block',\n  parseHTML() {\n    return [{\n      tag: 'hr'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['hr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\n  },\n  addCommands() {\n    return {\n      setHorizontalRule: () => ({\n        chain,\n        state\n      }) => {\n        const {\n          $to: $originTo\n        } = state.selection;\n        const currentChain = chain();\n        if ($originTo.parentOffset === 0) {\n          currentChain.insertContentAt(Math.max($originTo.pos - 2, 0), {\n            type: this.name\n          });\n        } else {\n          currentChain.insertContent({\n            type: this.name\n          });\n        }\n        return currentChain\n        // set cursor after horizontal rule\n        .command(({\n          tr,\n          dispatch\n        }) => {\n          var _a;\n          if (dispatch) {\n            const {\n              $to\n            } = tr.selection;\n            const posAfter = $to.end();\n            if ($to.nodeAfter) {\n              if ($to.nodeAfter.isTextblock) {\n                tr.setSelection(TextSelection.create(tr.doc, $to.pos + 1));\n              } else if ($to.nodeAfter.isBlock) {\n                tr.setSelection(NodeSelection.create(tr.doc, $to.pos));\n              } else {\n                tr.setSelection(TextSelection.create(tr.doc, $to.pos));\n              }\n            } else {\n              // add node after horizontal rule if it’s the end of the document\n              const node = (_a = $to.parent.type.contentMatch.defaultType) === null || _a === void 0 ? void 0 : _a.create();\n              if (node) {\n                tr.insert(posAfter, node);\n                tr.setSelection(TextSelection.create(tr.doc, posAfter + 1));\n              }\n            }\n            tr.scrollIntoView();\n          }\n          return true;\n        }).run();\n      }\n    };\n  },\n  addInputRules() {\n    return [nodeInputRule({\n      find: /^(?:---|—-|___\\s|\\*\\*\\*\\s)$/,\n      type: this.type\n    })];\n  }\n});\nexport { HorizontalRule, HorizontalRule as default };\n","import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\nconst starInputRegex = /(?:^|\\s)((?:\\*)((?:[^*]+))(?:\\*))$/;\nconst starPasteRegex = /(?:^|\\s)((?:\\*)((?:[^*]+))(?:\\*))/g;\nconst underscoreInputRegex = /(?:^|\\s)((?:_)((?:[^_]+))(?:_))$/;\nconst underscorePasteRegex = /(?:^|\\s)((?:_)((?:[^_]+))(?:_))/g;\nconst Italic = Mark.create({\n  name: 'italic',\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  parseHTML() {\n    return [{\n      tag: 'em'\n    }, {\n      tag: 'i',\n      getAttrs: node => node.style.fontStyle !== 'normal' && null\n    }, {\n      style: 'font-style=italic'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['em', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      setItalic: () => ({\n        commands\n      }) => {\n        return commands.setMark(this.name);\n      },\n      toggleItalic: () => ({\n        commands\n      }) => {\n        return commands.toggleMark(this.name);\n      },\n      unsetItalic: () => ({\n        commands\n      }) => {\n        return commands.unsetMark(this.name);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-i': () => this.editor.commands.toggleItalic(),\n      'Mod-I': () => this.editor.commands.toggleItalic()\n    };\n  },\n  addInputRules() {\n    return [markInputRule({\n      find: starInputRegex,\n      type: this.type\n    }), markInputRule({\n      find: underscoreInputRegex,\n      type: this.type\n    })];\n  },\n  addPasteRules() {\n    return [markPasteRule({\n      find: starPasteRegex,\n      type: this.type\n    }), markPasteRule({\n      find: underscorePasteRegex,\n      type: this.type\n    })];\n  }\n});\nexport { Italic, Italic as default, starInputRegex, starPasteRegex, underscoreInputRegex, underscorePasteRegex };\n","import { Node, mergeAttributes } from '@tiptap/core';\nconst ListItem = Node.create({\n  name: 'listItem',\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n      bulletListTypeName: 'bulletList',\n      orderedListTypeName: 'orderedList'\n    };\n  },\n  content: 'paragraph block*',\n  defining: true,\n  parseHTML() {\n    return [{\n      tag: 'li'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name)\n    };\n  }\n});\nexport { ListItem, ListItem as default };\n","import { Node, mergeAttributes, Mark, getMarkAttributes, wrappingInputRule } from '@tiptap/core';\nconst ListItem = Node.create({\n  name: 'listItem',\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n      bulletListTypeName: 'bulletList',\n      orderedListTypeName: 'orderedList'\n    };\n  },\n  content: 'paragraph block*',\n  defining: true,\n  parseHTML() {\n    return [{\n      tag: 'li'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name)\n    };\n  }\n});\nconst TextStyle = Mark.create({\n  name: 'textStyle',\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  parseHTML() {\n    return [{\n      tag: 'span',\n      getAttrs: element => {\n        const hasStyles = element.hasAttribute('style');\n        if (!hasStyles) {\n          return false;\n        }\n        return {};\n      }\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['span', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      removeEmptyTextStyle: () => ({\n        state,\n        commands\n      }) => {\n        const attributes = getMarkAttributes(state, this.type);\n        const hasStyles = Object.entries(attributes).some(([, value]) => !!value);\n        if (hasStyles) {\n          return true;\n        }\n        return commands.unsetMark(this.name);\n      }\n    };\n  }\n});\nconst inputRegex = /^(\\d+)\\.\\s$/;\nconst OrderedList = Node.create({\n  name: 'orderedList',\n  addOptions() {\n    return {\n      itemTypeName: 'listItem',\n      HTMLAttributes: {},\n      keepMarks: false,\n      keepAttributes: false\n    };\n  },\n  group: 'block list',\n  content() {\n    return `${this.options.itemTypeName}+`;\n  },\n  addAttributes() {\n    return {\n      start: {\n        default: 1,\n        parseHTML: element => {\n          return element.hasAttribute('start') ? parseInt(element.getAttribute('start') || '', 10) : 1;\n        }\n      }\n    };\n  },\n  parseHTML() {\n    return [{\n      tag: 'ol'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    const {\n      start,\n      ...attributesWithoutStart\n    } = HTMLAttributes;\n    return start === 1 ? ['ol', mergeAttributes(this.options.HTMLAttributes, attributesWithoutStart), 0] : ['ol', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      toggleOrderedList: () => ({\n        commands,\n        chain\n      }) => {\n        if (this.options.keepAttributes) {\n          return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItem.name, this.editor.getAttributes(TextStyle.name)).run();\n        }\n        return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-7': () => this.editor.commands.toggleOrderedList()\n    };\n  },\n  addInputRules() {\n    let inputRule = wrappingInputRule({\n      find: inputRegex,\n      type: this.type,\n      getAttributes: match => ({\n        start: +match[1]\n      }),\n      joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1]\n    });\n    if (this.options.keepMarks || this.options.keepAttributes) {\n      inputRule = wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n        keepMarks: this.options.keepMarks,\n        keepAttributes: this.options.keepAttributes,\n        getAttributes: match => ({\n          start: +match[1],\n          ...this.editor.getAttributes(TextStyle.name)\n        }),\n        joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1],\n        editor: this.editor\n      });\n    }\n    return [inputRule];\n  }\n});\nexport { OrderedList, OrderedList as default, inputRegex };\n","import { Node, mergeAttributes } from '@tiptap/core';\nconst Paragraph = Node.create({\n  name: 'paragraph',\n  priority: 1000,\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  group: 'block',\n  content: 'inline*',\n  parseHTML() {\n    return [{\n      tag: 'p'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['p', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      setParagraph: () => ({\n        commands\n      }) => {\n        return commands.setNode(this.name);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Alt-0': () => this.editor.commands.setParagraph()\n    };\n  }\n});\nexport { Paragraph, Paragraph as default };\n","import { Extension } from '@tiptap/core';\nimport { Plugin, PluginKey } from '@tiptap/pm/state';\nimport { Decoration, DecorationSet } from '@tiptap/pm/view';\nconst Placeholder = Extension.create({\n  name: 'placeholder',\n  addOptions() {\n    return {\n      emptyEditorClass: 'is-editor-empty',\n      emptyNodeClass: 'is-empty',\n      placeholder: 'Write something …',\n      showOnlyWhenEditable: true,\n      showOnlyCurrent: true,\n      includeChildren: false\n    };\n  },\n  addProseMirrorPlugins() {\n    return [new Plugin({\n      key: new PluginKey('placeholder'),\n      props: {\n        decorations: ({\n          doc,\n          selection\n        }) => {\n          const active = this.editor.isEditable || !this.options.showOnlyWhenEditable;\n          const {\n            anchor\n          } = selection;\n          const decorations = [];\n          if (!active) {\n            return null;\n          }\n          // only calculate isEmpty once due to its performance impacts (see issue #3360)\n          const emptyDocInstance = doc.type.createAndFill();\n          const isEditorEmpty = (emptyDocInstance === null || emptyDocInstance === void 0 ? void 0 : emptyDocInstance.sameMarkup(doc)) && emptyDocInstance.content.findDiffStart(doc.content) === null;\n          doc.descendants((node, pos) => {\n            const hasAnchor = anchor >= pos && anchor <= pos + node.nodeSize;\n            const isEmpty = !node.isLeaf && !node.childCount;\n            if ((hasAnchor || !this.options.showOnlyCurrent) && isEmpty) {\n              const classes = [this.options.emptyNodeClass];\n              if (isEditorEmpty) {\n                classes.push(this.options.emptyEditorClass);\n              }\n              const decoration = Decoration.node(pos, pos + node.nodeSize, {\n                class: classes.join(' '),\n                'data-placeholder': typeof this.options.placeholder === 'function' ? this.options.placeholder({\n                  editor: this.editor,\n                  node,\n                  pos,\n                  hasAnchor\n                }) : this.options.placeholder\n              });\n              decorations.push(decoration);\n            }\n            return this.options.includeChildren;\n          });\n          return DecorationSet.create(doc, decorations);\n        }\n      }\n    })];\n  }\n});\nexport { Placeholder, Placeholder as default };\n","import { Mark, mergeAttributes, isMacOS, markInputRule, markPasteRule } from '@tiptap/core';\nconst inputRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))$/;\nconst pasteRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))/g;\nconst Strike = Mark.create({\n  name: 'strike',\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  parseHTML() {\n    return [{\n      tag: 's'\n    }, {\n      tag: 'del'\n    }, {\n      tag: 'strike'\n    }, {\n      style: 'text-decoration',\n      consuming: false,\n      getAttrs: style => style.includes('line-through') ? {} : false\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      setStrike: () => ({\n        commands\n      }) => {\n        return commands.setMark(this.name);\n      },\n      toggleStrike: () => ({\n        commands\n      }) => {\n        return commands.toggleMark(this.name);\n      },\n      unsetStrike: () => ({\n        commands\n      }) => {\n        return commands.unsetMark(this.name);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    const shortcuts = {};\n    if (isMacOS()) {\n      shortcuts['Mod-Shift-s'] = () => this.editor.commands.toggleStrike();\n    } else {\n      shortcuts['Ctrl-Shift-s'] = () => this.editor.commands.toggleStrike();\n    }\n    return shortcuts;\n  },\n  addInputRules() {\n    return [markInputRule({\n      find: inputRegex,\n      type: this.type\n    })];\n  },\n  addPasteRules() {\n    return [markPasteRule({\n      find: pasteRegex,\n      type: this.type\n    })];\n  }\n});\nexport { Strike, Strike as default, inputRegex, pasteRegex };\n","import { Node, mergeAttributes, wrappingInputRule } from '@tiptap/core';\nconst inputRegex = /^\\s*(\\[([( |x])?\\])\\s$/;\nconst TaskItem = Node.create({\n  name: 'taskItem',\n  addOptions() {\n    return {\n      nested: false,\n      HTMLAttributes: {},\n      taskListTypeName: 'taskList'\n    };\n  },\n  content() {\n    return this.options.nested ? 'paragraph block*' : 'paragraph+';\n  },\n  defining: true,\n  addAttributes() {\n    return {\n      checked: {\n        default: false,\n        keepOnSplit: false,\n        parseHTML: element => element.getAttribute('data-checked') === 'true',\n        renderHTML: attributes => ({\n          'data-checked': attributes.checked\n        })\n      }\n    };\n  },\n  parseHTML() {\n    return [{\n      tag: `li[data-type=\"${this.name}\"]`,\n      priority: 51\n    }];\n  },\n  renderHTML({\n    node,\n    HTMLAttributes\n  }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes, {\n      'data-type': this.name\n    }), ['label', ['input', {\n      type: 'checkbox',\n      checked: node.attrs.checked ? 'checked' : null\n    }], ['span']], ['div', 0]];\n  },\n  addKeyboardShortcuts() {\n    const shortcuts = {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name)\n    };\n    if (!this.options.nested) {\n      return shortcuts;\n    }\n    return {\n      ...shortcuts,\n      Tab: () => this.editor.commands.sinkListItem(this.name)\n    };\n  },\n  addNodeView() {\n    return ({\n      node,\n      HTMLAttributes,\n      getPos,\n      editor\n    }) => {\n      const listItem = document.createElement('li');\n      const checkboxWrapper = document.createElement('label');\n      const checkboxStyler = document.createElement('span');\n      const checkbox = document.createElement('input');\n      const content = document.createElement('div');\n      checkboxWrapper.contentEditable = 'false';\n      checkbox.type = 'checkbox';\n      checkbox.addEventListener('change', event => {\n        // if the editor isn’t editable and we don't have a handler for\n        // readonly checks we have to undo the latest change\n        if (!editor.isEditable && !this.options.onReadOnlyChecked) {\n          checkbox.checked = !checkbox.checked;\n          return;\n        }\n        const {\n          checked\n        } = event.target;\n        if (editor.isEditable && typeof getPos === 'function') {\n          editor.chain().focus(undefined, {\n            scrollIntoView: false\n          }).command(({\n            tr\n          }) => {\n            const position = getPos();\n            const currentNode = tr.doc.nodeAt(position);\n            tr.setNodeMarkup(position, undefined, {\n              ...(currentNode === null || currentNode === void 0 ? void 0 : currentNode.attrs),\n              checked\n            });\n            return true;\n          }).run();\n        }\n        if (!editor.isEditable && this.options.onReadOnlyChecked) {\n          // Reset state if onReadOnlyChecked returns false\n          if (!this.options.onReadOnlyChecked(node, checked)) {\n            checkbox.checked = !checkbox.checked;\n          }\n        }\n      });\n      Object.entries(this.options.HTMLAttributes).forEach(([key, value]) => {\n        listItem.setAttribute(key, value);\n      });\n      listItem.dataset.checked = node.attrs.checked;\n      if (node.attrs.checked) {\n        checkbox.setAttribute('checked', 'checked');\n      }\n      checkboxWrapper.append(checkbox, checkboxStyler);\n      listItem.append(checkboxWrapper, content);\n      Object.entries(HTMLAttributes).forEach(([key, value]) => {\n        listItem.setAttribute(key, value);\n      });\n      return {\n        dom: listItem,\n        contentDOM: content,\n        update: updatedNode => {\n          if (updatedNode.type !== this.type) {\n            return false;\n          }\n          listItem.dataset.checked = updatedNode.attrs.checked;\n          if (updatedNode.attrs.checked) {\n            checkbox.setAttribute('checked', 'checked');\n          } else {\n            checkbox.removeAttribute('checked');\n          }\n          return true;\n        }\n      };\n    };\n  },\n  addInputRules() {\n    return [wrappingInputRule({\n      find: inputRegex,\n      type: this.type,\n      getAttributes: match => ({\n        checked: match[match.length - 1] === 'x'\n      })\n    })];\n  }\n});\nexport { TaskItem, TaskItem as default, inputRegex };\n","import { Node, mergeAttributes } from '@tiptap/core';\nconst TaskList = Node.create({\n  name: 'taskList',\n  addOptions() {\n    return {\n      itemTypeName: 'taskItem',\n      HTMLAttributes: {}\n    };\n  },\n  group: 'block list',\n  content() {\n    return `${this.options.itemTypeName}+`;\n  },\n  parseHTML() {\n    return [{\n      tag: `ul[data-type=\"${this.name}\"]`,\n      priority: 51\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['ul', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes, {\n      'data-type': this.name\n    }), 0];\n  },\n  addCommands() {\n    return {\n      toggleTaskList: () => ({\n        commands\n      }) => {\n        return commands.toggleList(this.name, this.options.itemTypeName);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-9': () => this.editor.commands.toggleTaskList()\n    };\n  }\n});\nexport { TaskList, TaskList as default };\n","import { Node } from '@tiptap/core';\nconst Text = Node.create({\n  name: 'text',\n  group: 'inline'\n});\nexport { Text, Text as default };\n","import { TuiCustomEnter } from '@tinkoff/tui-editor/extensions/enter';\nimport { Extension } from '@tiptap/core';\nimport { Blockquote } from '@tiptap/extension-blockquote';\nimport { Bold } from '@tiptap/extension-bold';\nimport { BulletList } from '@tiptap/extension-bullet-list';\nimport { Code } from '@tiptap/extension-code';\nimport { CodeBlock } from '@tiptap/extension-code-block';\nimport { Document } from '@tiptap/extension-document';\nimport { Dropcursor } from '@tiptap/extension-dropcursor';\nimport { Gapcursor } from '@tiptap/extension-gapcursor';\nimport { HardBreak } from '@tiptap/extension-hard-break';\nimport { Heading } from '@tiptap/extension-heading';\nimport { History } from '@tiptap/extension-history';\nimport { HorizontalRule } from '@tiptap/extension-horizontal-rule';\nimport { Italic } from '@tiptap/extension-italic';\nimport { ListItem } from '@tiptap/extension-list-item';\nimport { OrderedList } from '@tiptap/extension-ordered-list';\nimport { Paragraph } from '@tiptap/extension-paragraph';\nimport { Placeholder } from '@tiptap/extension-placeholder';\nimport { Strike } from '@tiptap/extension-strike';\nimport { TaskItem } from '@tiptap/extension-task-item';\nimport { TaskList } from '@tiptap/extension-task-list';\nimport { Text } from '@tiptap/extension-text';\nconst StarterKit = Extension.create({\n  name: `starterKit`,\n  // eslint-disable-next-line max-statements\n  addExtensions() {\n    var _a;\n    const extensions = [];\n    // note: in runtime it possibly be undefined\n    const options = this.options;\n    if ((options === null || options === void 0 ? void 0 : options.blockquote) !== false) {\n      extensions.push(Blockquote.configure(options === null || options === void 0 ? void 0 : options.blockquote));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.bold) !== false) {\n      extensions.push(Bold.configure(options === null || options === void 0 ? void 0 : options.bold));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.bulletList) !== false) {\n      extensions.push(BulletList.configure(options === null || options === void 0 ? void 0 : options.bulletList));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.code) !== false) {\n      extensions.push(Code.configure(options === null || options === void 0 ? void 0 : options.code));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.codeBlock) !== false) {\n      extensions.push(CodeBlock.configure(options === null || options === void 0 ? void 0 : options.codeBlock));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.document) !== false) {\n      extensions.push(Document.configure(options === null || options === void 0 ? void 0 : options.document));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.dropcursor) !== false) {\n      extensions.push(Dropcursor.configure(options === null || options === void 0 ? void 0 : options.dropcursor));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.gapcursor) !== false) {\n      extensions.push(Gapcursor.configure(options === null || options === void 0 ? void 0 : options.gapcursor));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.hardBreak) !== false) {\n      extensions.push(HardBreak.configure(options === null || options === void 0 ? void 0 : options.hardBreak));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.heading) !== false) {\n      extensions.push(Heading.configure(Object.assign({\n        levels: [1, 2, 3, 4, 5, 6]\n      }, options === null || options === void 0 ? void 0 : options.heading)).extend({\n        addKeyboardShortcuts() {\n          return this.options.levels.reduce((items, level) => Object.assign(Object.assign({}, items || {}), {\n            [`Mod-Alt-${level}`]: () => this === null || this === void 0 ? void 0 : this.editor.commands.toggleHeading({\n              level\n            })\n          }), {});\n        }\n      }));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.history) !== false) {\n      extensions.push(History.configure(Object.assign({\n        depth: 100,\n        newGroupDelay: 500\n      }, options === null || options === void 0 ? void 0 : options.history)));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.horizontalRule) !== false) {\n      extensions.push(HorizontalRule.configure(options === null || options === void 0 ? void 0 : options.horizontalRule));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.italic) !== false) {\n      extensions.push(Italic.configure(options === null || options === void 0 ? void 0 : options.italic));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.listItem) !== false) {\n      extensions.push(ListItem.configure(options === null || options === void 0 ? void 0 : options.listItem));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.taskList) !== false) {\n      extensions.push(TaskList.configure(options === null || options === void 0 ? void 0 : options.taskList));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.taskItem) !== false) {\n      extensions.push(TaskItem.configure(Object.assign({\n        nested: true\n      }, options === null || options === void 0 ? void 0 : options.taskItem)));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.orderedList) !== false) {\n      extensions.push(OrderedList.configure(options === null || options === void 0 ? void 0 : options.orderedList));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.paragraph) !== false) {\n      extensions.push(Paragraph.configure(options === null || options === void 0 ? void 0 : options.paragraph));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.strike) !== false) {\n      extensions.push(Strike.configure(options === null || options === void 0 ? void 0 : options.strike));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.text) !== false) {\n      extensions.push(Text.configure(options === null || options === void 0 ? void 0 : options.text));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.placeholder) !== false) {\n      extensions.push(Placeholder.configure(Object.assign({\n        emptyNodeClass: `t-editor-placeholder`,\n        includeChildren: true,\n        showOnlyCurrent: true,\n        showOnlyWhenEditable: true,\n        placeholder: ``\n      }, (_a = options === null || options === void 0 ? void 0 : options.placeholder) !== null && _a !== void 0 ? _a : {})));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.enter) !== false) {\n      extensions.push(TuiCustomEnter);\n    }\n    return extensions;\n  }\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { StarterKit };\n"],"mappings":"qSACA,IAAMA,GAAiBC,EAAU,OAAO,CACtC,KAAM,cACN,sBAAuB,CACrB,MAAO,CACL,MAAO,CAAC,CACN,OAAAC,CACF,IAAM,CACJ,IAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACpB,OAAIL,EAAO,SAAS,SAAS,GAC3BA,EAAO,SAAS,kBAAkB,EAClCA,GAAW,MAAqCA,EAAO,SAAS,QAAQC,EAAKD,GAAW,KAA4B,OAASA,EAAO,MAAM,UAAU,UAAY,MAAQC,IAAO,OAASA,EAAK,GAAK,CAAC,EAC/L,WAAW,YACZI,GAAMD,GAAMD,GAAMD,EAAKF,EAAO,KAAK,QAAQA,EAAO,MAAM,UAAU,MAAM,KAAO,MAAQE,IAAO,OAAS,OAASA,EAAG,iBAAmB,MAAQC,IAAO,OAAS,OAASA,EAAG,QAAQ,SAAS,KAAO,MAAQC,IAAO,OAAS,OAASA,EAAG,cAAc,+BAA+B,KAAO,MAAQC,IAAO,QAAkBA,EAAG,QAAQ,SAAS,cAAc,GAAG,CAAC,GAE7V,IAEF,KAAK,OAAO,MAAM,EAAE,oBAAoB,EAAE,IAAI,CACvD,CACF,CACF,CACF,CAAC,ECpBD,IAAMC,GAAa,WACbC,GAAaC,EAAK,OAAO,CAC7B,KAAM,aACN,YAAa,CACX,MAAO,CACL,eAAgB,CAAC,CACnB,CACF,EACA,QAAS,SACT,MAAO,QACP,SAAU,GACV,WAAY,CACV,MAAO,CAAC,CACN,IAAK,YACP,CAAC,CACH,EACA,WAAW,CACT,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,aAAcC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CACvF,EACA,aAAc,CACZ,MAAO,CACL,cAAe,IAAM,CAAC,CACpB,SAAAE,CACF,IACSA,EAAS,OAAO,KAAK,IAAI,EAElC,iBAAkB,IAAM,CAAC,CACvB,SAAAA,CACF,IACSA,EAAS,WAAW,KAAK,IAAI,EAEtC,gBAAiB,IAAM,CAAC,CACtB,SAAAA,CACF,IACSA,EAAS,KAAK,KAAK,IAAI,CAElC,CACF,EACA,sBAAuB,CACrB,MAAO,CACL,cAAe,IAAM,KAAK,OAAO,SAAS,iBAAiB,CAC7D,CACF,EACA,eAAgB,CACd,MAAO,CAACC,EAAkB,CACxB,KAAMN,GACN,KAAM,KAAK,IACb,CAAC,CAAC,CACJ,CACF,CAAC,ECnDD,IAAMO,GAAiB,yCACjBC,GAAiB,yCACjBC,GAAuB,sCACvBC,GAAuB,sCACvBC,GAAOC,EAAK,OAAO,CACvB,KAAM,OACN,YAAa,CACX,MAAO,CACL,eAAgB,CAAC,CACnB,CACF,EACA,WAAY,CACV,MAAO,CAAC,CACN,IAAK,QACP,EAAG,CACD,IAAK,IACL,SAAUC,GAAQA,EAAK,MAAM,aAAe,UAAY,IAC1D,EAAG,CACD,MAAO,cACP,SAAUC,GAAS,4BAA4B,KAAKA,CAAK,GAAK,IAChE,CAAC,CACH,EACA,WAAW,CACT,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,SAAUC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CACnF,EACA,aAAc,CACZ,MAAO,CACL,QAAS,IAAM,CAAC,CACd,SAAAE,CACF,IACSA,EAAS,QAAQ,KAAK,IAAI,EAEnC,WAAY,IAAM,CAAC,CACjB,SAAAA,CACF,IACSA,EAAS,WAAW,KAAK,IAAI,EAEtC,UAAW,IAAM,CAAC,CAChB,SAAAA,CACF,IACSA,EAAS,UAAU,KAAK,IAAI,CAEvC,CACF,EACA,sBAAuB,CACrB,MAAO,CACL,QAAS,IAAM,KAAK,OAAO,SAAS,WAAW,EAC/C,QAAS,IAAM,KAAK,OAAO,SAAS,WAAW,CACjD,CACF,EACA,eAAgB,CACd,MAAO,CAACC,EAAc,CACpB,KAAMX,GACN,KAAM,KAAK,IACb,CAAC,EAAGW,EAAc,CAChB,KAAMT,GACN,KAAM,KAAK,IACb,CAAC,CAAC,CACJ,EACA,eAAgB,CACd,MAAO,CAACU,EAAc,CACpB,KAAMX,GACN,KAAM,KAAK,IACb,CAAC,EAAGW,EAAc,CAChB,KAAMT,GACN,KAAM,KAAK,IACb,CAAC,CAAC,CACJ,CACF,CAAC,ECtED,IAAMU,GAAWC,EAAK,OAAO,CAC3B,KAAM,WACN,YAAa,CACX,MAAO,CACL,eAAgB,CAAC,EACjB,mBAAoB,aACpB,oBAAqB,aACvB,CACF,EACA,QAAS,mBACT,SAAU,GACV,WAAY,CACV,MAAO,CAAC,CACN,IAAK,IACP,CAAC,CACH,EACA,WAAW,CACT,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,KAAMC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CAC/E,EACA,sBAAuB,CACrB,MAAO,CACL,MAAO,IAAM,KAAK,OAAO,SAAS,cAAc,KAAK,IAAI,EACzD,IAAK,IAAM,KAAK,OAAO,SAAS,aAAa,KAAK,IAAI,EACtD,YAAa,IAAM,KAAK,OAAO,SAAS,aAAa,KAAK,IAAI,CAChE,CACF,CACF,CAAC,EACKE,GAAYC,EAAK,OAAO,CAC5B,KAAM,YACN,YAAa,CACX,MAAO,CACL,eAAgB,CAAC,CACnB,CACF,EACA,WAAY,CACV,MAAO,CAAC,CACN,IAAK,OACL,SAAUC,GACUA,EAAQ,aAAa,OAAO,EAIvC,CAAC,EAFC,EAIb,CAAC,CACH,EACA,WAAW,CACT,eAAAJ,CACF,EAAG,CACD,MAAO,CAAC,OAAQC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CACjF,EACA,aAAc,CACZ,MAAO,CACL,qBAAsB,IAAM,CAAC,CAC3B,MAAAK,EACA,SAAAC,CACF,IAAM,CACJ,IAAMC,EAAaC,EAAkBH,EAAO,KAAK,IAAI,EAErD,OADkB,OAAO,QAAQE,CAAU,EAAE,KAAK,CAAC,CAAC,CAAEE,CAAK,IAAM,CAAC,CAACA,CAAK,EAE/D,GAEFH,EAAS,UAAU,KAAK,IAAI,CACrC,CACF,CACF,CACF,CAAC,EACKI,GAAa,iBACbC,GAAaZ,EAAK,OAAO,CAC7B,KAAM,aACN,YAAa,CACX,MAAO,CACL,aAAc,WACd,eAAgB,CAAC,EACjB,UAAW,GACX,eAAgB,EAClB,CACF,EACA,MAAO,aACP,SAAU,CACR,MAAO,GAAG,KAAK,QAAQ,YAAY,GACrC,EACA,WAAY,CACV,MAAO,CAAC,CACN,IAAK,IACP,CAAC,CACH,EACA,WAAW,CACT,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,KAAMC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CAC/E,EACA,aAAc,CACZ,MAAO,CACL,iBAAkB,IAAM,CAAC,CACvB,SAAAM,EACA,MAAAM,CACF,IACM,KAAK,QAAQ,eACRA,EAAM,EAAE,WAAW,KAAK,KAAM,KAAK,QAAQ,aAAc,KAAK,QAAQ,SAAS,EAAE,iBAAiBd,GAAS,KAAM,KAAK,OAAO,cAAcI,GAAU,IAAI,CAAC,EAAE,IAAI,EAElKI,EAAS,WAAW,KAAK,KAAM,KAAK,QAAQ,aAAc,KAAK,QAAQ,SAAS,CAE3F,CACF,EACA,sBAAuB,CACrB,MAAO,CACL,cAAe,IAAM,KAAK,OAAO,SAAS,iBAAiB,CAC7D,CACF,EACA,eAAgB,CACd,IAAIO,EAAYC,EAAkB,CAChC,KAAMJ,GACN,KAAM,KAAK,IACb,CAAC,EACD,OAAI,KAAK,QAAQ,WAAa,KAAK,QAAQ,kBACzCG,EAAYC,EAAkB,CAC5B,KAAMJ,GACN,KAAM,KAAK,KACX,UAAW,KAAK,QAAQ,UACxB,eAAgB,KAAK,QAAQ,eAC7B,cAAe,IACN,KAAK,OAAO,cAAcR,GAAU,IAAI,EAEjD,OAAQ,KAAK,MACf,CAAC,GAEI,CAACW,CAAS,CACnB,CACF,CAAC,ECnID,IAAME,GAAa,mCACbC,GAAa,mCACbC,GAAOC,EAAK,OAAO,CACvB,KAAM,OACN,YAAa,CACX,MAAO,CACL,eAAgB,CAAC,CACnB,CACF,EACA,SAAU,IACV,KAAM,GACN,SAAU,GACV,WAAY,CACV,MAAO,CAAC,CACN,IAAK,MACP,CAAC,CACH,EACA,WAAW,CACT,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,OAAQC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CACjF,EACA,aAAc,CACZ,MAAO,CACL,QAAS,IAAM,CAAC,CACd,SAAAE,CACF,IACSA,EAAS,QAAQ,KAAK,IAAI,EAEnC,WAAY,IAAM,CAAC,CACjB,SAAAA,CACF,IACSA,EAAS,WAAW,KAAK,IAAI,EAEtC,UAAW,IAAM,CAAC,CAChB,SAAAA,CACF,IACSA,EAAS,UAAU,KAAK,IAAI,CAEvC,CACF,EACA,sBAAuB,CACrB,MAAO,CACL,QAAS,IAAM,KAAK,OAAO,SAAS,WAAW,CACjD,CACF,EACA,eAAgB,CACd,MAAO,CAACC,EAAc,CACpB,KAAMP,GACN,KAAM,KAAK,IACb,CAAC,CAAC,CACJ,EACA,eAAgB,CACd,MAAO,CAACQ,EAAc,CACpB,KAAMP,GACN,KAAM,KAAK,IACb,CAAC,CAAC,CACJ,CACF,CAAC,ECzDD,IAAMQ,GAAqB,uBACrBC,GAAkB,uBAClBC,GAAYC,EAAK,OAAO,CAC5B,KAAM,YACN,YAAa,CACX,MAAO,CACL,oBAAqB,YACrB,kBAAmB,GACnB,gBAAiB,GACjB,eAAgB,CAAC,CACnB,CACF,EACA,QAAS,QACT,MAAO,GACP,MAAO,QACP,KAAM,GACN,SAAU,GACV,eAAgB,CACd,MAAO,CACL,SAAU,CACR,QAAS,KACT,UAAWC,GAAW,CACpB,IAAIC,EACJ,GAAM,CACJ,oBAAAC,CACF,EAAI,KAAK,QAGHC,EAFa,CAAC,KAAMF,EAAKD,EAAQ,qBAAuB,MAAQC,IAAO,OAAS,OAASA,EAAG,YAAc,CAAC,CAAE,EACtF,OAAOG,GAAaA,EAAU,WAAWF,CAAmB,CAAC,EAAE,IAAIE,GAAaA,EAAU,QAAQF,EAAqB,EAAE,CAAC,EAC5H,CAAC,EAC5B,OAAKC,GACI,IAGX,EACA,SAAU,EACZ,CACF,CACF,EACA,WAAY,CACV,MAAO,CAAC,CACN,IAAK,MACL,mBAAoB,MACtB,CAAC,CACH,EACA,WAAW,CACT,KAAAE,EACA,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,MAAOC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,OAAQ,CACpF,MAAOD,EAAK,MAAM,SAAW,KAAK,QAAQ,oBAAsBA,EAAK,MAAM,SAAW,IACxF,EAAG,CAAC,CAAC,CACP,EACA,aAAc,CACZ,MAAO,CACL,aAAcG,GAAc,CAAC,CAC3B,SAAAC,CACF,IACSA,EAAS,QAAQ,KAAK,KAAMD,CAAU,EAE/C,gBAAiBA,GAAc,CAAC,CAC9B,SAAAC,CACF,IACSA,EAAS,WAAW,KAAK,KAAM,YAAaD,CAAU,CAEjE,CACF,EACA,sBAAuB,CACrB,MAAO,CACL,YAAa,IAAM,KAAK,OAAO,SAAS,gBAAgB,EAExD,UAAW,IAAM,CACf,GAAM,CACJ,MAAAE,EACA,QAAAC,CACF,EAAI,KAAK,OAAO,MAAM,UAChBC,EAAYD,EAAQ,MAAQ,EAClC,MAAI,CAACD,GAASC,EAAQ,OAAO,KAAK,OAAS,KAAK,KACvC,GAELC,GAAa,CAACD,EAAQ,OAAO,YAAY,OACpC,KAAK,OAAO,SAAS,WAAW,EAElC,EACT,EAEA,MAAO,CAAC,CACN,OAAAE,CACF,IAAM,CACJ,GAAI,CAAC,KAAK,QAAQ,kBAChB,MAAO,GAET,GAAM,CACJ,MAAAC,CACF,EAAID,EACE,CACJ,UAAAE,CACF,EAAID,EACE,CACJ,MAAAE,EACA,MAAAN,CACF,EAAIK,EACJ,GAAI,CAACL,GAASM,EAAM,OAAO,OAAS,KAAK,KACvC,MAAO,GAET,IAAMC,EAAUD,EAAM,eAAiBA,EAAM,OAAO,SAAW,EACzDE,EAAwBF,EAAM,OAAO,YAAY,SAAS;AAAA;AAAA,CAAM,EACtE,MAAI,CAACC,GAAW,CAACC,EACR,GAEFL,EAAO,MAAM,EAAE,QAAQ,CAAC,CAC7B,GAAAM,CACF,KACEA,EAAG,OAAOH,EAAM,IAAM,EAAGA,EAAM,GAAG,EAC3B,GACR,EAAE,SAAS,EAAE,IAAI,CACpB,EAEA,UAAW,CAAC,CACV,OAAAH,CACF,IAAM,CACJ,GAAI,CAAC,KAAK,QAAQ,gBAChB,MAAO,GAET,GAAM,CACJ,MAAAC,CACF,EAAID,EACE,CACJ,UAAAE,EACA,IAAAK,CACF,EAAIN,EACE,CACJ,MAAAE,EACA,MAAAN,CACF,EAAIK,EAKJ,GAJI,CAACL,GAASM,EAAM,OAAO,OAAS,KAAK,MAIrC,EADYA,EAAM,eAAiBA,EAAM,OAAO,SAAW,GAE7D,MAAO,GAET,IAAMK,EAAQL,EAAM,MAAM,EAK1B,OAJIK,IAAU,QAGID,EAAI,OAAOC,CAAK,EAEzB,GAEFR,EAAO,SAAS,SAAS,CAClC,CACF,CACF,EACA,eAAgB,CACd,MAAO,CAACS,EAAuB,CAC7B,KAAM1B,GACN,KAAM,KAAK,KACX,cAAe2B,IAAU,CACvB,SAAUA,EAAM,CAAC,CACnB,EACF,CAAC,EAAGD,EAAuB,CACzB,KAAMzB,GACN,KAAM,KAAK,KACX,cAAe0B,IAAU,CACvB,SAAUA,EAAM,CAAC,CACnB,EACF,CAAC,CAAC,CACJ,EACA,uBAAwB,CACtB,MAAO,CAGP,IAAIC,EAAO,CACT,IAAK,IAAIC,EAAU,wBAAwB,EAC3C,MAAO,CACL,YAAa,CAACC,EAAMC,IAAU,CAK5B,GAJI,CAACA,EAAM,eAIP,KAAK,OAAO,SAAS,KAAK,KAAK,IAAI,EACrC,MAAO,GAET,IAAMC,EAAOD,EAAM,cAAc,QAAQ,YAAY,EAC/CE,EAASF,EAAM,cAAc,QAAQ,oBAAoB,EACzDG,EAAaD,EAAS,KAAK,MAAMA,CAAM,EAAI,OAC3C1B,EAAW2B,GAAe,KAAgC,OAASA,EAAW,KACpF,GAAI,CAACF,GAAQ,CAACzB,EACZ,MAAO,GAET,GAAM,CACJ,GAAAgB,CACF,EAAIO,EAAK,MAET,OAAAP,EAAG,qBAAqB,KAAK,KAAK,OAAO,CACvC,SAAAhB,CACF,CAAC,CAAC,EAEFgB,EAAG,aAAaY,EAAc,KAAKZ,EAAG,IAAI,QAAQ,KAAK,IAAI,EAAGA,EAAG,UAAU,KAAO,CAAC,CAAC,CAAC,CAAC,EAItFA,EAAG,WAAWS,EAAK,QAAQ,SAAU;AAAA,CAAI,CAAC,EAI1CT,EAAG,QAAQ,QAAS,EAAI,EACxBO,EAAK,SAASP,CAAE,EACT,EACT,CACF,CACF,CAAC,CAAC,CACJ,CACF,CAAC,ECtND,IAAMa,GAAWC,EAAK,OAAO,CAC3B,KAAM,MACN,QAAS,GACT,QAAS,QACX,CAAC,ECQD,SAASC,GAAWC,EAAU,CAAC,EAAG,CAChC,OAAO,IAAIC,EAAO,CAChB,KAAKC,EAAY,CACf,OAAO,IAAIC,EAAeD,EAAYF,CAAO,CAC/C,CACF,CAAC,CACH,CACA,IAAMG,EAAN,KAAqB,CACnB,YAAYD,EAAYF,EAAS,CAC/B,IAAII,EACJ,KAAK,WAAaF,EAClB,KAAK,UAAY,KACjB,KAAK,QAAU,KACf,KAAK,QAAU,GACf,KAAK,OAASE,EAAKJ,EAAQ,SAAW,MAAQI,IAAO,OAASA,EAAK,EACnE,KAAK,MAAQJ,EAAQ,QAAU,GAAQ,OAAYA,EAAQ,OAAS,QACpE,KAAK,MAAQA,EAAQ,MACrB,KAAK,SAAW,CAAC,WAAY,UAAW,OAAQ,WAAW,EAAE,IAAIK,GAAQ,CACvE,IAAIC,EAAUC,GAAK,CACjB,KAAKF,CAAI,EAAEE,CAAC,CACd,EACA,OAAAL,EAAW,IAAI,iBAAiBG,EAAMC,CAAO,EACtC,CACL,KAAAD,EACA,QAAAC,CACF,CACF,CAAC,CACH,CACA,SAAU,CACR,KAAK,SAAS,QAAQ,CAAC,CACrB,KAAAD,EACA,QAAAC,CACF,IAAM,KAAK,WAAW,IAAI,oBAAoBD,EAAMC,CAAO,CAAC,CAC9D,CACA,OAAOJ,EAAYM,EAAW,CACxB,KAAK,WAAa,MAAQA,EAAU,KAAON,EAAW,MAAM,MAC1D,KAAK,UAAYA,EAAW,MAAM,IAAI,QAAQ,KAAM,KAAK,UAAU,IAAI,EAAO,KAAK,cAAc,EAEzG,CACA,UAAUO,EAAK,CACTA,GAAO,KAAK,YAChB,KAAK,UAAYA,EACbA,GAAO,MACT,KAAK,QAAQ,WAAW,YAAY,KAAK,OAAO,EAChD,KAAK,QAAU,MAEf,KAAK,cAAc,EAEvB,CACA,eAAgB,CACd,IAAIC,EAAO,KAAK,WAAW,MAAM,IAAI,QAAQ,KAAK,SAAS,EACvDC,EAAU,CAACD,EAAK,OAAO,cACzBE,EACF,GAAID,EAAS,CACX,IAAIE,EAASH,EAAK,WAChBI,EAAQJ,EAAK,UACf,GAAIG,GAAUC,EAAO,CACnB,IAAIC,EAAO,KAAK,WAAW,QAAQ,KAAK,WAAaF,EAASA,EAAO,SAAW,EAAE,EAClF,GAAIE,EAAM,CACR,IAAIC,EAAWD,EAAK,sBAAsB,EACtCE,EAAMJ,EAASG,EAAS,OAASA,EAAS,IAC1CH,GAAUC,IAAOG,GAAOA,EAAM,KAAK,WAAW,QAAQ,KAAK,SAAS,EAAE,sBAAsB,EAAE,KAAO,GACzGL,EAAO,CACL,KAAMI,EAAS,KACf,MAAOA,EAAS,MAChB,IAAKC,EAAM,KAAK,MAAQ,EACxB,OAAQA,EAAM,KAAK,MAAQ,CAC7B,CACF,CACF,CACF,CACA,GAAI,CAACL,EAAM,CACT,IAAIM,EAAS,KAAK,WAAW,YAAY,KAAK,SAAS,EACvDN,EAAO,CACL,KAAMM,EAAO,KAAO,KAAK,MAAQ,EACjC,MAAOA,EAAO,KAAO,KAAK,MAAQ,EAClC,IAAKA,EAAO,IACZ,OAAQA,EAAO,MACjB,CACF,CACA,IAAIC,EAAS,KAAK,WAAW,IAAI,aAC5B,KAAK,UACR,KAAK,QAAUA,EAAO,YAAY,SAAS,cAAc,KAAK,CAAC,EAC3D,KAAK,QAAO,KAAK,QAAQ,UAAY,KAAK,OAC9C,KAAK,QAAQ,MAAM,QAAU,yDACzB,KAAK,QACP,KAAK,QAAQ,MAAM,gBAAkB,KAAK,QAG9C,KAAK,QAAQ,UAAU,OAAO,+BAAgCR,CAAO,EACrE,KAAK,QAAQ,UAAU,OAAO,gCAAiC,CAACA,CAAO,EACvE,IAAIS,EAAYC,EAChB,GAAI,CAACF,GAAUA,GAAU,SAAS,MAAQ,iBAAiBA,CAAM,EAAE,UAAY,SAC7EC,EAAa,CAAC,YACdC,EAAY,CAAC,gBACR,CACL,IAAIT,EAAOO,EAAO,sBAAsB,EACxCC,EAAaR,EAAK,KAAOO,EAAO,WAChCE,EAAYT,EAAK,IAAMO,EAAO,SAChC,CACA,KAAK,QAAQ,MAAM,KAAOP,EAAK,KAAOQ,EAAa,KACnD,KAAK,QAAQ,MAAM,IAAMR,EAAK,IAAMS,EAAY,KAChD,KAAK,QAAQ,MAAM,MAAQT,EAAK,MAAQA,EAAK,KAAO,KACpD,KAAK,QAAQ,MAAM,OAASA,EAAK,OAASA,EAAK,IAAM,IACvD,CACA,gBAAgBU,EAAS,CACvB,aAAa,KAAK,OAAO,EACzB,KAAK,QAAU,WAAW,IAAM,KAAK,UAAU,IAAI,EAAGA,CAAO,CAC/D,CACA,SAASC,EAAO,CACd,GAAI,CAAC,KAAK,WAAW,SAAU,OAC/B,IAAId,EAAM,KAAK,WAAW,YAAY,CACpC,KAAMc,EAAM,QACZ,IAAKA,EAAM,OACb,CAAC,EACGR,EAAON,GAAOA,EAAI,QAAU,GAAK,KAAK,WAAW,MAAM,IAAI,OAAOA,EAAI,MAAM,EAC5Ee,EAAoBT,GAAQA,EAAK,KAAK,KAAK,kBAC3CU,EAAW,OAAOD,GAAqB,WAAaA,EAAkB,KAAK,WAAYf,EAAKc,CAAK,EAAIC,EACzG,GAAIf,GAAO,CAACgB,EAAU,CACpB,IAAIC,EAASjB,EAAI,IACjB,GAAI,KAAK,WAAW,UAAY,KAAK,WAAW,SAAS,MAAO,CAC9D,IAAIkB,EAAQC,EAAU,KAAK,WAAW,MAAM,IAAKF,EAAQ,KAAK,WAAW,SAAS,KAAK,EACnFC,GAAS,OAAMD,EAASC,EAC9B,CACA,KAAK,UAAUD,CAAM,EACrB,KAAK,gBAAgB,GAAI,CAC3B,CACF,CACA,SAAU,CACR,KAAK,gBAAgB,EAAE,CACzB,CACA,MAAO,CACL,KAAK,gBAAgB,EAAE,CACzB,CACA,UAAUH,EAAO,EACXA,EAAM,QAAU,KAAK,WAAW,KAAO,CAAC,KAAK,WAAW,IAAI,SAASA,EAAM,aAAa,IAAG,KAAK,UAAU,IAAI,CACpH,CACF,ECpJA,IAAMM,GAAaC,EAAU,OAAO,CAClC,KAAM,aACN,YAAa,CACX,MAAO,CACL,MAAO,eACP,MAAO,EACP,MAAO,MACT,CACF,EACA,uBAAwB,CACtB,MAAO,CAACC,GAAW,KAAK,OAAO,CAAC,CAClC,CACF,CAAC,ECLD,IAAMC,EAAN,MAAMC,UAAkBC,CAAU,CAIhC,YAAYC,EAAM,CAChB,MAAMA,EAAMA,CAAI,CAClB,CACA,IAAIC,EAAKC,EAAS,CAChB,IAAIF,EAAOC,EAAI,QAAQC,EAAQ,IAAI,KAAK,IAAI,CAAC,EAC7C,OAAOJ,EAAU,MAAME,CAAI,EAAI,IAAIF,EAAUE,CAAI,EAAID,EAAU,KAAKC,CAAI,CAC1E,CACA,SAAU,CACR,OAAOG,EAAM,KACf,CACA,GAAGC,EAAO,CACR,OAAOA,aAAiBN,GAAaM,EAAM,MAAQ,KAAK,IAC1D,CACA,QAAS,CACP,MAAO,CACL,KAAM,YACN,IAAK,KAAK,IACZ,CACF,CAIA,OAAO,SAASH,EAAKI,EAAM,CACzB,GAAI,OAAOA,EAAK,KAAO,SAAU,MAAM,IAAI,WAAW,sCAAsC,EAC5F,OAAO,IAAIP,EAAUG,EAAI,QAAQI,EAAK,GAAG,CAAC,CAC5C,CAIA,aAAc,CACZ,OAAO,IAAIC,EAAY,KAAK,MAAM,CACpC,CAIA,OAAO,MAAMN,EAAM,CACjB,IAAIO,EAASP,EAAK,OAClB,GAAIO,EAAO,aAAe,CAACC,GAAaR,CAAI,GAAK,CAACS,GAAYT,CAAI,EAAG,MAAO,GAC5E,IAAIU,EAAWH,EAAO,KAAK,KAAK,eAChC,GAAIG,GAAY,KAAM,OAAOA,EAC7B,IAAIC,EAAQJ,EAAO,eAAeP,EAAK,MAAM,CAAC,EAAE,YAChD,OAAOW,GAASA,EAAM,WACxB,CAIA,OAAO,kBAAkBX,EAAMY,EAAKC,EAAW,GAAO,CACpDC,EAAQ,OAAS,CACf,GAAI,CAACD,GAAYf,EAAU,MAAME,CAAI,EAAG,OAAOA,EAC/C,IAAIe,EAAMf,EAAK,IACbgB,EAAO,KAET,QAASC,EAAIjB,EAAK,OAAQiB,IAAK,CAC7B,IAAIV,EAASP,EAAK,KAAKiB,CAAC,EACxB,GAAIL,EAAM,EAAIZ,EAAK,WAAWiB,CAAC,EAAIV,EAAO,WAAaP,EAAK,MAAMiB,CAAC,EAAI,EAAG,CACxED,EAAOT,EAAO,MAAMK,EAAM,EAAIZ,EAAK,WAAWiB,CAAC,EAAIjB,EAAK,MAAMiB,CAAC,EAAI,CAAC,EACpE,KACF,SAAWA,GAAK,EACd,OAAO,KAETF,GAAOH,EACP,IAAIM,EAAOlB,EAAK,IAAI,QAAQe,CAAG,EAC/B,GAAIjB,EAAU,MAAMoB,CAAI,EAAG,OAAOA,CACpC,CAEA,OAAS,CACP,IAAIC,EAASP,EAAM,EAAII,EAAK,WAAaA,EAAK,UAC9C,GAAI,CAACG,EAAQ,CACX,GAAIH,EAAK,QAAU,CAACA,EAAK,QAAU,CAACI,EAAc,aAAaJ,CAAI,EAAG,CACpEhB,EAAOA,EAAK,IAAI,QAAQe,EAAMC,EAAK,SAAWJ,CAAG,EACjDC,EAAW,GACX,SAASC,CACX,CACA,KACF,CACAE,EAAOG,EACPJ,GAAOH,EACP,IAAIM,EAAOlB,EAAK,IAAI,QAAQe,CAAG,EAC/B,GAAIjB,EAAU,MAAMoB,CAAI,EAAG,OAAOA,CACpC,CACA,OAAO,IACT,CACF,CACF,EACArB,EAAU,UAAU,QAAU,GAC9BA,EAAU,SAAWA,EAAU,kBAC/BE,EAAU,OAAO,YAAaF,CAAS,EACvC,IAAMS,EAAN,MAAMe,CAAY,CAChB,YAAYN,EAAK,CACf,KAAK,IAAMA,CACb,CACA,IAAIb,EAAS,CACX,OAAO,IAAImB,EAAYnB,EAAQ,IAAI,KAAK,GAAG,CAAC,CAC9C,CACA,QAAQD,EAAK,CACX,IAAID,EAAOC,EAAI,QAAQ,KAAK,GAAG,EAC/B,OAAOJ,EAAU,MAAMG,CAAI,EAAI,IAAIH,EAAUG,CAAI,EAAID,EAAU,KAAKC,CAAI,CAC1E,CACF,EACA,SAASQ,GAAaR,EAAM,CAC1B,QAASiB,EAAIjB,EAAK,MAAOiB,GAAK,EAAGA,IAAK,CACpC,IAAIK,EAAQtB,EAAK,MAAMiB,CAAC,EACtBV,EAASP,EAAK,KAAKiB,CAAC,EAEtB,GAAIK,GAAS,EAAG,CACd,GAAIf,EAAO,KAAK,KAAK,UAAW,MAAO,GACvC,QACF,CAEA,QAASgB,EAAShB,EAAO,MAAMe,EAAQ,CAAC,GAAIC,EAASA,EAAO,UAAW,CACrE,GAAIA,EAAO,YAAc,GAAK,CAACA,EAAO,eAAiBA,EAAO,QAAUA,EAAO,KAAK,KAAK,UAAW,MAAO,GAC3G,GAAIA,EAAO,cAAe,MAAO,EACnC,CACF,CAEA,MAAO,EACT,CACA,SAASd,GAAYT,EAAM,CACzB,QAASiB,EAAIjB,EAAK,MAAOiB,GAAK,EAAGA,IAAK,CACpC,IAAIK,EAAQtB,EAAK,WAAWiB,CAAC,EAC3BV,EAASP,EAAK,KAAKiB,CAAC,EACtB,GAAIK,GAASf,EAAO,WAAY,CAC9B,GAAIA,EAAO,KAAK,KAAK,UAAW,MAAO,GACvC,QACF,CACA,QAASiB,EAAQjB,EAAO,MAAMe,CAAK,GAAIE,EAAQA,EAAM,WAAY,CAC/D,GAAIA,EAAM,YAAc,GAAK,CAACA,EAAM,eAAiBA,EAAM,QAAUA,EAAM,KAAK,KAAK,UAAW,MAAO,GACvG,GAAIA,EAAM,cAAe,MAAO,EAClC,CACF,CACA,MAAO,EACT,CAWA,SAASC,IAAY,CACnB,OAAO,IAAIC,EAAO,CAChB,MAAO,CACL,YAAaC,GACb,uBAAuBC,EAAOC,EAASC,EAAO,CAC5C,OAAOD,EAAQ,KAAOC,EAAM,KAAOjC,EAAU,MAAMiC,CAAK,EAAI,IAAIjC,EAAUiC,CAAK,EAAI,IACrF,EACA,YAAAC,GACA,cAAAC,GACA,gBAAiB,CACf,YAAaC,EACf,CACF,CACF,CAAC,CACH,CACA,IAAMD,GAAgBE,GAAe,CACnC,UAAaC,EAAM,QAAS,EAAE,EAC9B,WAAcA,EAAM,QAAS,CAAC,EAC9B,QAAWA,EAAM,OAAQ,EAAE,EAC3B,UAAaA,EAAM,OAAQ,CAAC,CAC9B,CAAC,EACD,SAASA,EAAMC,EAAMxB,EAAK,CACxB,IAAMyB,EAASD,GAAQ,OAASxB,EAAM,EAAI,OAAS,KAAOA,EAAM,EAAI,QAAU,OAC9E,OAAO,SAAU0B,EAAOC,EAAUC,EAAM,CACtC,IAAIC,EAAMH,EAAM,UACZI,EAAS9B,EAAM,EAAI6B,EAAI,IAAMA,EAAI,MACnC5B,EAAW4B,EAAI,MACjB,GAAIA,aAAeE,EAAe,CAChC,GAAI,CAACH,EAAK,eAAeH,CAAM,GAAKK,EAAO,OAAS,EAAG,MAAO,GAC9D7B,EAAW,GACX6B,EAASJ,EAAM,IAAI,QAAQ1B,EAAM,EAAI8B,EAAO,MAAM,EAAIA,EAAO,OAAO,CAAC,CACvE,CACA,IAAIE,EAAS/C,EAAU,kBAAkB6C,EAAQ9B,EAAKC,CAAQ,EAC9D,OAAK+B,GACDL,GAAUA,EAASD,EAAM,GAAG,aAAa,IAAIzC,EAAU+C,CAAM,CAAC,CAAC,EAC5D,IAFa,EAGtB,CACF,CACA,SAASb,GAAYS,EAAMzB,EAAK8B,EAAO,CACrC,GAAI,CAACL,GAAQ,CAACA,EAAK,SAAU,MAAO,GACpC,IAAIxC,EAAOwC,EAAK,MAAM,IAAI,QAAQzB,CAAG,EACrC,GAAI,CAAClB,EAAU,MAAMG,CAAI,EAAG,MAAO,GACnC,IAAI8C,EAAWN,EAAK,YAAY,CAC9B,KAAMK,EAAM,QACZ,IAAKA,EAAM,OACb,CAAC,EACD,OAAIC,GAAYA,EAAS,OAAS,IAAM1B,EAAc,aAAaoB,EAAK,MAAM,IAAI,OAAOM,EAAS,MAAM,CAAC,EAAU,IACnHN,EAAK,SAASA,EAAK,MAAM,GAAG,aAAa,IAAI3C,EAAUG,CAAI,CAAC,CAAC,EACtD,GACT,CAKA,SAASiC,GAAYO,EAAMK,EAAO,CAChC,GAAIA,EAAM,WAAa,yBAA2B,EAAEL,EAAK,MAAM,qBAAqB3C,GAAY,MAAO,GACvG,GAAI,CACF,MAAAkD,CACF,EAAIP,EAAK,MAAM,UACXQ,EAASD,EAAM,OAAO,eAAeA,EAAM,MAAM,CAAC,EAAE,aAAaP,EAAK,MAAM,OAAO,MAAM,IAAI,EACjG,GAAI,CAACQ,EAAQ,MAAO,GACpB,IAAIC,EAAOC,EAAS,MACpB,QAASC,EAAIH,EAAO,OAAS,EAAGG,GAAK,EAAGA,IAAKF,EAAOC,EAAS,KAAKF,EAAOG,CAAC,EAAE,cAAc,KAAMF,CAAI,CAAC,EACrG,IAAIG,EAAKZ,EAAK,MAAM,GAAG,QAAQO,EAAM,IAAKA,EAAM,IAAK,IAAI5C,EAAM8C,EAAM,EAAG,CAAC,CAAC,EAC1E,OAAAG,EAAG,aAAaT,EAAc,KAAKS,EAAG,IAAI,QAAQL,EAAM,IAAM,CAAC,CAAC,CAAC,EACjEP,EAAK,SAASY,CAAE,EACT,EACT,CACA,SAASzB,GAAcW,EAAO,CAC5B,GAAI,EAAEA,EAAM,qBAAqBzC,GAAY,OAAO,KACpD,IAAIwD,EAAO,SAAS,cAAc,KAAK,EACvC,OAAAA,EAAK,UAAY,wBACVC,GAAc,OAAOhB,EAAM,IAAK,CAACiB,GAAW,OAAOjB,EAAM,UAAU,KAAMe,EAAM,CACpF,IAAK,WACP,CAAC,CAAC,CAAC,CACL,CCpOA,IAAMG,GAAYC,EAAU,OAAO,CACjC,KAAM,YACN,uBAAwB,CACtB,MAAO,CAACC,GAAU,CAAC,CACrB,EACA,iBAAiBC,EAAW,CAC1B,IAAIC,EACJ,IAAMC,EAAU,CACd,KAAMF,EAAU,KAChB,QAASA,EAAU,QACnB,QAASA,EAAU,OACrB,EACA,MAAO,CACL,gBAAiBC,EAAKE,GAAaC,GAAkBJ,EAAW,iBAAkBE,CAAO,CAAC,KAAO,MAAQD,IAAO,OAASA,EAAK,IAChI,CACF,CACF,CAAC,ECjBD,IAAMI,GAAYC,EAAK,OAAO,CAC5B,KAAM,YACN,YAAa,CACX,MAAO,CACL,UAAW,GACX,eAAgB,CAAC,CACnB,CACF,EACA,OAAQ,GACR,MAAO,SACP,WAAY,GACZ,WAAY,CACV,MAAO,CAAC,CACN,IAAK,IACP,CAAC,CACH,EACA,WAAW,CACT,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,KAAMC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,CAAC,CAC5E,EACA,YAAa,CACX,MAAO;AAAA,CACT,EACA,aAAc,CACZ,MAAO,CACL,aAAc,IAAM,CAAC,CACnB,SAAAE,EACA,MAAAC,EACA,MAAAC,EACA,OAAAC,CACF,IACSH,EAAS,MAAM,CAAC,IAAMA,EAAS,SAAS,EAAG,IAAMA,EAAS,QAAQ,IAAM,CAC7E,GAAM,CACJ,UAAAI,EACA,YAAAC,CACF,EAAIH,EACJ,GAAIE,EAAU,MAAM,OAAO,KAAK,KAAK,UACnC,MAAO,GAET,GAAM,CACJ,UAAAE,CACF,EAAI,KAAK,QACH,CACJ,gBAAAC,CACF,EAAIJ,EAAO,iBACLK,EAAQH,GAAeD,EAAU,IAAI,cAAgBA,EAAU,MAAM,MAAM,EACjF,OAAOH,EAAM,EAAE,cAAc,CAC3B,KAAM,KAAK,IACb,CAAC,EAAE,QAAQ,CAAC,CACV,GAAAQ,EACA,SAAAC,CACF,IAAM,CACJ,GAAIA,GAAYF,GAASF,EAAW,CAClC,IAAMK,EAAgBH,EAAM,OAAOI,GAAQL,EAAgB,SAASK,EAAK,KAAK,IAAI,CAAC,EACnFH,EAAG,YAAYE,CAAa,CAC9B,CACA,MAAO,EACT,CAAC,EAAE,IAAI,CACT,CAAC,CAAC,CAAC,CAEP,CACF,EACA,sBAAuB,CACrB,MAAO,CACL,YAAa,IAAM,KAAK,OAAO,SAAS,aAAa,EACrD,cAAe,IAAM,KAAK,OAAO,SAAS,aAAa,CACzD,CACF,CACF,CAAC,ECrED,IAAME,GAAUC,EAAK,OAAO,CAC1B,KAAM,UACN,YAAa,CACX,MAAO,CACL,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EACzB,eAAgB,CAAC,CACnB,CACF,EACA,QAAS,UACT,MAAO,QACP,SAAU,GACV,eAAgB,CACd,MAAO,CACL,MAAO,CACL,QAAS,EACT,SAAU,EACZ,CACF,CACF,EACA,WAAY,CACV,OAAO,KAAK,QAAQ,OAAO,IAAIC,IAAU,CACvC,IAAK,IAAIA,CAAK,GACd,MAAO,CACL,MAAAA,CACF,CACF,EAAE,CACJ,EACA,WAAW,CACT,KAAAC,EACA,eAAAC,CACF,EAAG,CAGD,MAAO,CAAC,IAFS,KAAK,QAAQ,OAAO,SAASD,EAAK,MAAM,KAAK,EACrCA,EAAK,MAAM,MAAQ,KAAK,QAAQ,OAAO,CAAC,CAChD,GAAIE,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CACtF,EACA,aAAc,CACZ,MAAO,CACL,WAAYE,GAAc,CAAC,CACzB,SAAAC,CACF,IACO,KAAK,QAAQ,OAAO,SAASD,EAAW,KAAK,EAG3CC,EAAS,QAAQ,KAAK,KAAMD,CAAU,EAFpC,GAIX,cAAeA,GAAc,CAAC,CAC5B,SAAAC,CACF,IACO,KAAK,QAAQ,OAAO,SAASD,EAAW,KAAK,EAG3CC,EAAS,WAAW,KAAK,KAAM,YAAaD,CAAU,EAFpD,EAIb,CACF,EACA,sBAAuB,CACrB,OAAO,KAAK,QAAQ,OAAO,OAAO,CAACE,EAAON,IAAWO,EAAAC,EAAA,GAChDF,GADgD,CAGjD,CAAC,WAAWN,CAAK,EAAE,EAAG,IAAM,KAAK,OAAO,SAAS,cAAc,CAC7D,MAAAA,CACF,CAAC,CAEL,GAAI,CAAC,CAAC,CACR,EACA,eAAgB,CACd,OAAO,KAAK,QAAQ,OAAO,IAAIA,GACtBS,EAAuB,CAC5B,KAAM,IAAI,OAAO,SAAST,CAAK,QAAQ,EACvC,KAAM,KAAK,KACX,cAAe,CACb,MAAAA,CACF,CACF,CAAC,CACF,CACH,CACF,CAAC,EC7ED,IAAIU,EAAiB,IAKjBC,EAAe,UAAwB,CAAC,EAC5CA,EAAa,UAAU,OAAS,SAAgBC,EAAO,CACrD,OAAKA,EAAM,QAGXA,EAAQD,EAAa,KAAKC,CAAK,EACxB,CAAC,KAAK,QAAUA,GAASA,EAAM,OAASF,GAAkB,KAAK,WAAWE,CAAK,GAAK,KAAK,OAASF,GAAkBE,EAAM,YAAY,IAAI,GAAK,KAAK,YAAYA,CAAK,GAHnK,IAIX,EAIAD,EAAa,UAAU,QAAU,SAAiBC,EAAO,CACvD,OAAKA,EAAM,OAGJD,EAAa,KAAKC,CAAK,EAAE,OAAO,IAAI,EAFlC,IAGX,EACAD,EAAa,UAAU,YAAc,SAAqBC,EAAO,CAC/D,OAAO,IAAIC,GAAO,KAAMD,CAAK,CAC/B,EAIAD,EAAa,UAAU,MAAQ,SAAeG,EAAMC,EAAI,CAGtD,OAFID,IAAS,SAAQA,EAAO,GACxBC,IAAO,SAAQA,EAAK,KAAK,QACzBD,GAAQC,EACHJ,EAAa,MAEf,KAAK,WAAW,KAAK,IAAI,EAAGG,CAAI,EAAG,KAAK,IAAI,KAAK,OAAQC,CAAE,CAAC,CACrE,EAIAJ,EAAa,UAAU,IAAM,SAAaK,EAAG,CAC3C,GAAI,EAAAA,EAAI,GAAKA,GAAK,KAAK,QAGvB,OAAO,KAAK,SAASA,CAAC,CACxB,EAOAL,EAAa,UAAU,QAAU,SAAiBM,EAAGH,EAAMC,EAAI,CACzDD,IAAS,SAAQA,EAAO,GACxBC,IAAO,SAAQA,EAAK,KAAK,QACzBD,GAAQC,EACV,KAAK,aAAaE,EAAGH,EAAMC,EAAI,CAAC,EAEhC,KAAK,qBAAqBE,EAAGH,EAAMC,EAAI,CAAC,CAE5C,EAKAJ,EAAa,UAAU,IAAM,SAAaM,EAAGH,EAAMC,EAAI,CACjDD,IAAS,SAAQA,EAAO,GACxBC,IAAO,SAAQA,EAAK,KAAK,QAC7B,IAAIG,EAAS,CAAC,EACd,YAAK,QAAQ,SAAUC,EAAKH,EAAG,CAC7B,OAAOE,EAAO,KAAKD,EAAEE,EAAKH,CAAC,CAAC,CAC9B,EAAGF,EAAMC,CAAE,EACJG,CACT,EAKAP,EAAa,KAAO,SAAcS,EAAQ,CACxC,OAAIA,aAAkBT,EACbS,EAEFA,GAAUA,EAAO,OAAS,IAAIC,GAAKD,CAAM,EAAIT,EAAa,KACnE,EACA,IAAIU,GAAoB,SAAUV,EAAc,CAC9C,SAASU,EAAKD,EAAQ,CACpBT,EAAa,KAAK,IAAI,EACtB,KAAK,OAASS,CAChB,CACIT,IAAcU,EAAK,UAAYV,GACnCU,EAAK,UAAY,OAAO,OAAOV,GAAgBA,EAAa,SAAS,EACrEU,EAAK,UAAU,YAAcA,EAC7B,IAAIC,EAAqB,CACvB,OAAQ,CACN,aAAc,EAChB,EACA,MAAO,CACL,aAAc,EAChB,CACF,EACA,OAAAD,EAAK,UAAU,QAAU,UAAmB,CAC1C,OAAO,KAAK,MACd,EACAA,EAAK,UAAU,WAAa,SAAoBP,EAAMC,EAAI,CACxD,OAAID,GAAQ,GAAKC,GAAM,KAAK,OACnB,KAEF,IAAIM,EAAK,KAAK,OAAO,MAAMP,EAAMC,CAAE,CAAC,CAC7C,EACAM,EAAK,UAAU,SAAW,SAAkBL,EAAG,CAC7C,OAAO,KAAK,OAAOA,CAAC,CACtB,EACAK,EAAK,UAAU,aAAe,SAAsBJ,EAAGH,EAAMC,EAAIQ,EAAO,CACtE,QAASP,EAAIF,EAAME,EAAID,EAAIC,IACzB,GAAIC,EAAE,KAAK,OAAOD,CAAC,EAAGO,EAAQP,CAAC,IAAM,GACnC,MAAO,EAGb,EACAK,EAAK,UAAU,qBAAuB,SAA8BJ,EAAGH,EAAMC,EAAIQ,EAAO,CACtF,QAASP,EAAIF,EAAO,EAAGE,GAAKD,EAAIC,IAC9B,GAAIC,EAAE,KAAK,OAAOD,CAAC,EAAGO,EAAQP,CAAC,IAAM,GACnC,MAAO,EAGb,EACAK,EAAK,UAAU,WAAa,SAAoBT,EAAO,CACrD,GAAI,KAAK,OAASA,EAAM,QAAUF,EAChC,OAAO,IAAIW,EAAK,KAAK,OAAO,OAAOT,EAAM,QAAQ,CAAC,CAAC,CAEvD,EACAS,EAAK,UAAU,YAAc,SAAqBT,EAAO,CACvD,GAAI,KAAK,OAASA,EAAM,QAAUF,EAChC,OAAO,IAAIW,EAAKT,EAAM,QAAQ,EAAE,OAAO,KAAK,MAAM,CAAC,CAEvD,EACAU,EAAmB,OAAO,IAAM,UAAY,CAC1C,OAAO,KAAK,OAAO,MACrB,EACAA,EAAmB,MAAM,IAAM,UAAY,CACzC,MAAO,EACT,EACA,OAAO,iBAAiBD,EAAK,UAAWC,CAAkB,EACnDD,CACT,EAAEV,CAAY,EAIdA,EAAa,MAAQ,IAAIU,GAAK,CAAC,CAAC,EAChC,IAAIR,GAAsB,SAAUF,EAAc,CAChD,SAASE,EAAOW,EAAMC,EAAO,CAC3Bd,EAAa,KAAK,IAAI,EACtB,KAAK,KAAOa,EACZ,KAAK,MAAQC,EACb,KAAK,OAASD,EAAK,OAASC,EAAM,OAClC,KAAK,MAAQ,KAAK,IAAID,EAAK,MAAOC,EAAM,KAAK,EAAI,CACnD,CACA,OAAId,IAAcE,EAAO,UAAYF,GACrCE,EAAO,UAAY,OAAO,OAAOF,GAAgBA,EAAa,SAAS,EACvEE,EAAO,UAAU,YAAcA,EAC/BA,EAAO,UAAU,QAAU,UAAmB,CAC5C,OAAO,KAAK,KAAK,QAAQ,EAAE,OAAO,KAAK,MAAM,QAAQ,CAAC,CACxD,EACAA,EAAO,UAAU,SAAW,SAAkBG,EAAG,CAC/C,OAAOA,EAAI,KAAK,KAAK,OAAS,KAAK,KAAK,IAAIA,CAAC,EAAI,KAAK,MAAM,IAAIA,EAAI,KAAK,KAAK,MAAM,CACtF,EACAH,EAAO,UAAU,aAAe,SAAsBI,EAAGH,EAAMC,EAAIQ,EAAO,CACxE,IAAIG,EAAU,KAAK,KAAK,OAIxB,GAHIZ,EAAOY,GAAW,KAAK,KAAK,aAAaT,EAAGH,EAAM,KAAK,IAAIC,EAAIW,CAAO,EAAGH,CAAK,IAAM,IAGpFR,EAAKW,GAAW,KAAK,MAAM,aAAaT,EAAG,KAAK,IAAIH,EAAOY,EAAS,CAAC,EAAG,KAAK,IAAI,KAAK,OAAQX,CAAE,EAAIW,EAASH,EAAQG,CAAO,IAAM,GACpI,MAAO,EAEX,EACAb,EAAO,UAAU,qBAAuB,SAA8BI,EAAGH,EAAMC,EAAIQ,EAAO,CACxF,IAAIG,EAAU,KAAK,KAAK,OAIxB,GAHIZ,EAAOY,GAAW,KAAK,MAAM,qBAAqBT,EAAGH,EAAOY,EAAS,KAAK,IAAIX,EAAIW,CAAO,EAAIA,EAASH,EAAQG,CAAO,IAAM,IAG3HX,EAAKW,GAAW,KAAK,KAAK,qBAAqBT,EAAG,KAAK,IAAIH,EAAMY,CAAO,EAAGX,EAAIQ,CAAK,IAAM,GAC5F,MAAO,EAEX,EACAV,EAAO,UAAU,WAAa,SAAoBC,EAAMC,EAAI,CAC1D,GAAID,GAAQ,GAAKC,GAAM,KAAK,OAC1B,OAAO,KAET,IAAIW,EAAU,KAAK,KAAK,OACxB,OAAIX,GAAMW,EACD,KAAK,KAAK,MAAMZ,EAAMC,CAAE,EAE7BD,GAAQY,EACH,KAAK,MAAM,MAAMZ,EAAOY,EAASX,EAAKW,CAAO,EAE/C,KAAK,KAAK,MAAMZ,EAAMY,CAAO,EAAE,OAAO,KAAK,MAAM,MAAM,EAAGX,EAAKW,CAAO,CAAC,CAChF,EACAb,EAAO,UAAU,WAAa,SAAoBD,EAAO,CACvD,IAAIe,EAAQ,KAAK,MAAM,WAAWf,CAAK,EACvC,GAAIe,EACF,OAAO,IAAId,EAAO,KAAK,KAAMc,CAAK,CAEtC,EACAd,EAAO,UAAU,YAAc,SAAqBD,EAAO,CACzD,IAAIe,EAAQ,KAAK,KAAK,YAAYf,CAAK,EACvC,GAAIe,EACF,OAAO,IAAId,EAAOc,EAAO,KAAK,KAAK,CAEvC,EACAd,EAAO,UAAU,YAAc,SAAqBD,EAAO,CACzD,OAAI,KAAK,KAAK,OAAS,KAAK,IAAI,KAAK,MAAM,MAAOA,EAAM,KAAK,EAAI,EACxD,IAAIC,EAAO,KAAK,KAAM,IAAIA,EAAO,KAAK,MAAOD,CAAK,CAAC,EAErD,IAAIC,EAAO,KAAMD,CAAK,CAC/B,EACOC,CACT,EAAEF,CAAY,EACPiB,EAAQjB,ECpMf,IAAMkB,GAAkB,IAClBC,EAAN,MAAMC,CAAO,CACX,YAAYC,EAAOC,EAAY,CAC7B,KAAK,MAAQD,EACb,KAAK,WAAaC,CACpB,CAGA,SAASC,EAAOC,EAAe,CAC7B,GAAI,KAAK,YAAc,EAAG,OAAO,KACjC,IAAIC,EAAM,KAAK,MAAM,OACrB,MAAQA,IAEN,GADW,KAAK,MAAM,IAAIA,EAAM,CAAC,EACxB,UAAW,CAClB,EAAEA,EACF,KACF,CAEF,IAAIC,EAAOC,EACPH,IACFE,EAAQ,KAAK,UAAUD,EAAK,KAAK,MAAM,MAAM,EAC7CE,EAAUD,EAAM,KAAK,QAEvB,IAAIE,EAAYL,EAAM,GAClBM,EAAWC,EACXC,EAAW,CAAC,EACdC,EAAY,CAAC,EACf,YAAK,MAAM,QAAQ,CAACC,EAAMC,IAAM,CAC9B,GAAI,CAACD,EAAK,KAAM,CACTP,IACHA,EAAQ,KAAK,UAAUD,EAAKS,EAAI,CAAC,EACjCP,EAAUD,EAAM,KAAK,QAEvBC,IACAK,EAAU,KAAKC,CAAI,EACnB,MACF,CACA,GAAIP,EAAO,CACTM,EAAU,KAAK,IAAIG,EAAKF,EAAK,GAAG,CAAC,EACjC,IAAIG,EAAOH,EAAK,KAAK,IAAIP,EAAM,MAAMC,CAAO,CAAC,EAC3CU,EACED,GAAQR,EAAU,UAAUQ,CAAI,EAAE,MACpCC,EAAMT,EAAU,QAAQ,KAAKA,EAAU,QAAQ,KAAK,OAAS,CAAC,EAC9DG,EAAS,KAAK,IAAII,EAAKE,EAAK,OAAW,OAAWN,EAAS,OAASC,EAAU,MAAM,CAAC,GAEvFL,IACIU,GAAKX,EAAM,UAAUW,EAAKV,CAAO,CACvC,MACEC,EAAU,UAAUK,EAAK,IAAI,EAE/B,GAAIA,EAAK,UACP,OAAAJ,EAAYH,EAAQO,EAAK,UAAU,IAAIP,EAAM,MAAMC,CAAO,CAAC,EAAIM,EAAK,UACpEH,EAAY,IAAIV,EAAO,KAAK,MAAM,MAAM,EAAGK,CAAG,EAAE,OAAOO,EAAU,QAAQ,EAAE,OAAOD,CAAQ,CAAC,EAAG,KAAK,WAAa,CAAC,EAC1G,EAEX,EAAG,KAAK,MAAM,OAAQ,CAAC,EAChB,CACL,UAAWD,EACX,UAAAF,EACA,UAAWC,CACb,CACF,CAEA,aAAaD,EAAWC,EAAWS,EAAad,EAAe,CAC7D,IAAIe,EAAW,CAAC,EACdjB,EAAa,KAAK,WAChBkB,EAAW,KAAK,MAClBC,EAAW,CAACjB,GAAiBgB,EAAS,OAASA,EAAS,IAAIA,EAAS,OAAS,CAAC,EAAI,KACrF,QAASN,EAAI,EAAGA,EAAIN,EAAU,MAAM,OAAQM,IAAK,CAC/C,IAAIE,EAAOR,EAAU,MAAMM,CAAC,EAAE,OAAON,EAAU,KAAKM,CAAC,CAAC,EAClDD,EAAO,IAAIE,EAAKP,EAAU,QAAQ,KAAKM,CAAC,EAAGE,EAAMP,CAAS,EAC5Da,GACEA,EAASD,GAAYA,EAAS,MAAMR,CAAI,KAC1CA,EAAOS,EACHR,EAAGK,EAAS,IAAI,EAAOC,EAAWA,EAAS,MAAM,EAAGA,EAAS,OAAS,CAAC,GAE7ED,EAAS,KAAKN,CAAI,EACdJ,IACFP,IACAO,EAAY,QAETL,IAAeiB,EAAWR,EACjC,CACA,IAAIU,EAAWrB,EAAagB,EAAY,MACxC,OAAIK,EAAWC,KACbJ,EAAWK,GAAaL,EAAUG,CAAQ,EAC1CrB,GAAcqB,GAET,IAAIvB,EAAOoB,EAAS,OAAOD,CAAQ,EAAGjB,CAAU,CACzD,CACA,UAAUwB,EAAMC,EAAI,CAClB,IAAIC,EAAO,IAAIC,EACf,YAAK,MAAM,QAAQ,CAAChB,EAAM,IAAM,CAC9B,IAAIiB,EAAYjB,EAAK,cAAgB,MAAQ,EAAIA,EAAK,cAAgBa,EAAOE,EAAK,KAAK,OAASf,EAAK,aAAe,OACpHe,EAAK,UAAUf,EAAK,IAAKiB,CAAS,CACpC,EAAGJ,EAAMC,CAAE,EACJC,CACT,CACA,QAAQG,EAAO,CACb,OAAI,KAAK,YAAc,EAAU,KAC1B,IAAI/B,EAAO,KAAK,MAAM,OAAO+B,EAAM,IAAId,GAAO,IAAIF,EAAKE,CAAG,CAAC,CAAC,EAAG,KAAK,UAAU,CACvF,CAKA,QAAQe,EAAkBC,EAAc,CACtC,GAAI,CAAC,KAAK,WAAY,OAAO,KAC7B,IAAIC,EAAe,CAAC,EAClBC,EAAQ,KAAK,IAAI,EAAG,KAAK,MAAM,OAASF,CAAY,EAClDG,EAAUJ,EAAiB,QAC3BK,EAAWL,EAAiB,MAAM,OAClC9B,EAAa,KAAK,WACtB,KAAK,MAAM,QAAQW,GAAQ,CACrBA,EAAK,WAAWX,GACtB,EAAGiC,CAAK,EACR,IAAIG,EAAWL,EACf,KAAK,MAAM,QAAQpB,GAAQ,CACzB,IAAI0B,EAAMH,EAAQ,UAAU,EAAEE,CAAQ,EACtC,GAAIC,GAAO,KAAM,OACjBF,EAAW,KAAK,IAAIA,EAAUE,CAAG,EACjC,IAAItB,EAAMmB,EAAQ,KAAKG,CAAG,EAC1B,GAAI1B,EAAK,KAAM,CACb,IAAIG,GAAOgB,EAAiB,MAAMO,CAAG,EAAE,OAAOP,EAAiB,KAAKO,CAAG,CAAC,EACpE9B,EAAYI,EAAK,WAAaA,EAAK,UAAU,IAAIuB,EAAQ,MAAME,EAAW,EAAGC,CAAG,CAAC,EACjF9B,GAAWP,IACfgC,EAAa,KAAK,IAAInB,EAAKE,EAAKD,GAAMP,CAAS,CAAC,CAClD,MACEyB,EAAa,KAAK,IAAInB,EAAKE,CAAG,CAAC,CAEnC,EAAGkB,CAAK,EACR,IAAIK,EAAU,CAAC,EACf,QAAS1B,EAAImB,EAAcnB,EAAIuB,EAAUvB,IAAK0B,EAAQ,KAAK,IAAIzB,EAAKqB,EAAQ,KAAKtB,CAAC,CAAC,CAAC,EACpF,IAAIb,EAAQ,KAAK,MAAM,MAAM,EAAGkC,CAAK,EAAE,OAAOK,CAAO,EAAE,OAAON,CAAY,EACtEO,EAAS,IAAIzC,EAAOC,EAAOC,CAAU,EACzC,OAAIuC,EAAO,eAAe,EAAI3C,KAAiB2C,EAASA,EAAO,SAAS,KAAK,MAAM,OAASP,EAAa,MAAM,GACxGO,CACT,CACA,gBAAiB,CACf,IAAIC,EAAQ,EACZ,YAAK,MAAM,QAAQ7B,GAAQ,CACpBA,EAAK,MAAM6B,GAClB,CAAC,EACMA,CACT,CAOA,SAASC,EAAO,KAAK,MAAM,OAAQ,CACjC,IAAIrC,EAAQ,KAAK,UAAU,EAAGqC,CAAI,EAChCpC,EAAUD,EAAM,KAAK,OACnBL,EAAQ,CAAC,EACX2C,EAAS,EACX,YAAK,MAAM,QAAQ,CAAC/B,EAAMC,IAAM,CAC9B,GAAIA,GAAK6B,EACP1C,EAAM,KAAKY,CAAI,EACXA,EAAK,WAAW+B,YACX/B,EAAK,KAAM,CACpB,IAAIG,EAAOH,EAAK,KAAK,IAAIP,EAAM,MAAMC,CAAO,CAAC,EAC3CU,EAAMD,GAAQA,EAAK,OAAO,EAG5B,GAFAT,IACIU,GAAKX,EAAM,UAAUW,EAAKV,CAAO,EACjCS,EAAM,CACR,IAAIP,EAAYI,EAAK,WAAaA,EAAK,UAAU,IAAIP,EAAM,MAAMC,CAAO,CAAC,EACrEE,GAAWmC,IACf,IAAIC,EAAU,IAAI9B,EAAKE,EAAI,OAAO,EAAGD,EAAMP,CAAS,EAClDa,EACAwB,EAAO7C,EAAM,OAAS,GACpBqB,EAASrB,EAAM,QAAUA,EAAM6C,CAAI,EAAE,MAAMD,CAAO,GAAG5C,EAAM6C,CAAI,EAAIxB,EAAYrB,EAAM,KAAK4C,CAAO,CACvG,CACF,MAAWhC,EAAK,KACdN,GAEJ,EAAG,KAAK,MAAM,OAAQ,CAAC,EAChB,IAAIP,EAAO+C,EAAa,KAAK9C,EAAM,QAAQ,CAAC,EAAG2C,CAAM,CAC9D,CACF,EACA7C,EAAO,MAAQ,IAAIA,EAAOgD,EAAa,MAAO,CAAC,EAC/C,SAAStB,GAAaxB,EAAO+C,EAAG,CAC9B,IAAIC,EACJ,OAAAhD,EAAM,QAAQ,CAACY,EAAMC,IAAM,CACzB,GAAID,EAAK,WAAamC,KAAO,EAC3B,OAAAC,EAAWnC,EACJ,EAEX,CAAC,EACMb,EAAM,MAAMgD,CAAQ,CAC7B,CACA,IAAMlC,EAAN,MAAMmC,CAAK,CACT,YAEAjC,EAEAD,EAIAP,EAGA0C,EAAc,CACZ,KAAK,IAAMlC,EACX,KAAK,KAAOD,EACZ,KAAK,UAAYP,EACjB,KAAK,aAAe0C,CACtB,CACA,MAAMC,EAAO,CACX,GAAI,KAAK,MAAQA,EAAM,MAAQ,CAACA,EAAM,UAAW,CAC/C,IAAIpC,EAAOoC,EAAM,KAAK,MAAM,KAAK,IAAI,EACrC,GAAIpC,EAAM,OAAO,IAAIkC,EAAKlC,EAAK,OAAO,EAAE,OAAO,EAAGA,EAAM,KAAK,SAAS,CACxE,CACF,CACF,EAIMqC,EAAN,KAAmB,CACjB,YAAYC,EAAMC,EAAQC,EAAYC,EAAUC,EAAiB,CAC/D,KAAK,KAAOJ,EACZ,KAAK,OAASC,EACd,KAAK,WAAaC,EAClB,KAAK,SAAWC,EAChB,KAAK,gBAAkBC,CACzB,CACF,EACMlC,GAAiB,GAEvB,SAASmC,GAAiBC,EAASzD,EAAO0D,EAAIC,EAAS,CACrD,IAAIC,EAAYF,EAAG,QAAQG,CAAU,EACnCC,EACF,GAAIF,EAAW,OAAOA,EAAU,aAC5BF,EAAG,QAAQK,EAAe,IAAGN,EAAU,IAAIP,EAAaO,EAAQ,KAAMA,EAAQ,OAAQ,KAAM,EAAG,EAAE,GACrG,IAAIO,EAAWN,EAAG,QAAQ,qBAAqB,EAC/C,GAAIA,EAAG,MAAM,QAAU,EACrB,OAAOD,EACF,GAAIO,GAAYA,EAAS,QAAQH,CAAU,EAChD,OAAIG,EAAS,QAAQH,CAAU,EAAE,KAAa,IAAIX,EAAaO,EAAQ,KAAK,aAAaC,EAAI,OAAWC,EAASM,EAAkBjE,CAAK,CAAC,EAAGyD,EAAQ,OAAQS,GAAUR,EAAG,QAAQ,KAAKA,EAAG,MAAM,OAAS,CAAC,CAAC,EAAGD,EAAQ,SAAUA,EAAQ,eAAe,EAAc,IAAIP,EAAaO,EAAQ,KAAMA,EAAQ,OAAO,aAAaC,EAAI,OAAWC,EAASM,EAAkBjE,CAAK,CAAC,EAAG,KAAMyD,EAAQ,SAAUA,EAAQ,eAAe,EAC5Z,GAAIC,EAAG,QAAQ,cAAc,IAAM,IAAS,EAAEM,GAAYA,EAAS,QAAQ,cAAc,IAAM,IAAQ,CAE5G,IAAIG,EAAcT,EAAG,QAAQ,aAAa,EACtCU,EAAWX,EAAQ,UAAY,GAAK,CAACO,GAAYP,EAAQ,iBAAmBU,IAAgBV,EAAQ,UAAYC,EAAG,MAAQ,GAAKC,EAAQ,eAAiB,CAACU,GAAaX,EAAID,EAAQ,UAAU,GAC7LJ,EAAaW,EAAWM,EAAUb,EAAQ,WAAYC,EAAG,OAAO,EAAIQ,GAAUR,EAAG,QAAQ,KAAKA,EAAG,MAAM,OAAS,CAAC,CAAC,EACtH,OAAO,IAAIR,EAAaO,EAAQ,KAAK,aAAaC,EAAIU,EAAWpE,EAAM,UAAU,YAAY,EAAI,OAAW2D,EAASM,EAAkBjE,CAAK,CAAC,EAAGJ,EAAO,MAAOyD,EAAYK,EAAG,KAAMS,GAAsBV,EAAQ,eAA6B,CAChP,KAAO,QAAIK,EAAUJ,EAAG,QAAQ,SAAS,GAGhC,IAAIR,EAAaO,EAAQ,KAAK,QAAQC,EAAII,CAAO,EAAGL,EAAQ,OAAO,QAAQC,EAAII,CAAO,EAAGQ,EAAUb,EAAQ,WAAYC,EAAG,OAAO,EAAGD,EAAQ,SAAUA,EAAQ,eAAe,EAE7K,IAAIP,EAAaO,EAAQ,KAAK,QAAQC,EAAG,QAAQ,IAAI,EAAGD,EAAQ,OAAO,QAAQC,EAAG,QAAQ,IAAI,EAAGY,EAAUb,EAAQ,WAAYC,EAAG,OAAO,EAAGD,EAAQ,SAAUA,EAAQ,eAAe,CAEhM,CACA,SAASY,GAAahE,EAAWgD,EAAY,CAC3C,GAAI,CAACA,EAAY,MAAO,GACxB,GAAI,CAAChD,EAAU,WAAY,MAAO,GAClC,IAAIkE,EAAW,GACf,OAAAlE,EAAU,QAAQ,KAAK,CAAC,EAAE,QAAQ,CAAC2B,EAAO9B,IAAQ,CAChD,QAAS,EAAI,EAAG,EAAImD,EAAW,OAAQ,GAAK,EAAOrB,GAASqB,EAAW,EAAI,CAAC,GAAKnD,GAAOmD,EAAW,CAAC,IAAGkB,EAAW,GACpH,CAAC,EACMA,CACT,CACA,SAASL,GAAUpD,EAAK,CACtB,IAAI0D,EAAS,CAAC,EACd,OAAA1D,EAAI,QAAQ,CAAC2D,EAAOC,EAAKnD,EAAMC,IAAOgD,EAAO,KAAKjD,EAAMC,CAAE,CAAC,EACpDgD,CACT,CACA,SAASF,EAAUK,EAAQ1C,EAAS,CAClC,GAAI,CAAC0C,EAAQ,OAAO,KACpB,IAAIH,EAAS,CAAC,EACd,QAAS7D,EAAI,EAAGA,EAAIgE,EAAO,OAAQhE,GAAK,EAAG,CACzC,IAAIY,EAAOU,EAAQ,IAAI0C,EAAOhE,CAAC,EAAG,CAAC,EACjCa,EAAKS,EAAQ,IAAI0C,EAAOhE,EAAI,CAAC,EAAG,EAAE,EAChCY,GAAQC,GAAIgD,EAAO,KAAKjD,EAAMC,CAAE,CACtC,CACA,OAAOgD,CACT,CAGA,SAASI,GAAgBnB,EAASzD,EAAO6E,EAAUC,EAAM,CACvD,IAAI7E,EAAgBgE,EAAkBjE,CAAK,EACvCe,EAAc8C,EAAW,IAAI7D,CAAK,EAAE,KAAK,OACzC+E,GAAOD,EAAOrB,EAAQ,OAASA,EAAQ,MAAM,SAASzD,EAAOC,CAAa,EAC9E,GAAI,CAAC8E,EAAK,OACV,IAAIzE,EAAYyE,EAAI,UAAU,QAAQA,EAAI,UAAU,GAAG,EACnDC,GAASF,EAAOrB,EAAQ,KAAOA,EAAQ,QAAQ,aAAasB,EAAI,UAAW/E,EAAM,UAAU,YAAY,EAAGe,EAAad,CAAa,EACpIgF,EAAU,IAAI/B,EAAa4B,EAAOE,EAAQD,EAAI,UAAWD,EAAOC,EAAI,UAAYC,EAAO,KAAM,EAAG,EAAE,EACtGH,EAASE,EAAI,UAAU,aAAazE,CAAS,EAAE,QAAQuD,EAAY,CACjE,KAAAiB,EACA,aAAcG,CAChB,CAAC,EAAE,eAAe,CAAC,CACrB,CACA,IAAIC,EAAsB,GACxBC,GAA6B,KAK/B,SAASlB,EAAkBjE,EAAO,CAChC,IAAIoF,EAAUpF,EAAM,QACpB,GAAImF,IAA8BC,EAAS,CACzCF,EAAsB,GACtBC,GAA6BC,EAC7B,QAASzE,EAAI,EAAGA,EAAIyE,EAAQ,OAAQzE,IAAK,GAAIyE,EAAQzE,CAAC,EAAE,KAAK,qBAAsB,CACjFuE,EAAsB,GACtB,KACF,CACF,CACA,OAAOA,CACT,CASA,IAAMG,EAAa,IAAIC,EAAU,SAAS,EACpCC,GAAkB,IAAID,EAAU,cAAc,EAUpD,SAASE,GAAQC,EAAS,CAAC,EAAG,CAC5B,OAAAA,EAAS,CACP,MAAOA,EAAO,OAAS,IACvB,cAAeA,EAAO,eAAiB,GACzC,EACO,IAAIC,EAAO,CAChB,IAAKL,EACL,MAAO,CACL,MAAO,CACL,OAAO,IAAIM,EAAaC,EAAO,MAAOA,EAAO,MAAO,KAAM,EAAG,EAAE,CACjE,EACA,MAAMC,EAAIC,EAAMC,EAAO,CACrB,OAAOC,GAAiBF,EAAMC,EAAOF,EAAIJ,CAAM,CACjD,CACF,EACA,OAAAA,EACA,MAAO,CACL,gBAAiB,CACf,YAAYQ,EAAM,EAAG,CACnB,IAAIC,EAAY,EAAE,UACdC,EAAUD,GAAa,cAAgBE,EAAOF,GAAa,cAAgBG,EAAO,KACtF,OAAKF,GACL,EAAE,eAAe,EACVA,EAAQF,EAAK,MAAOA,EAAK,QAAQ,GAFnB,EAGvB,CACF,CACF,CACF,CAAC,CACH,CAIA,IAAMG,EAAO,CAACL,EAAOO,IAAa,CAChC,IAAIR,EAAOT,EAAW,SAASU,CAAK,EACpC,MAAI,CAACD,GAAQA,EAAK,KAAK,YAAc,EAAU,IAC3CQ,GAAUC,GAAgBT,EAAMC,EAAOO,EAAU,EAAK,EACnD,GACT,EAIMD,EAAO,CAACN,EAAOO,IAAa,CAChC,IAAIR,EAAOT,EAAW,SAASU,CAAK,EACpC,MAAI,CAACD,GAAQA,EAAK,OAAO,YAAc,EAAU,IAC7CQ,GAAUC,GAAgBT,EAAMC,EAAOO,EAAU,EAAI,EAClD,GACT,EC1YA,IAAME,GAAUC,EAAU,OAAO,CAC/B,KAAM,UACN,YAAa,CACX,MAAO,CACL,MAAO,IACP,cAAe,GACjB,CACF,EACA,aAAc,CACZ,MAAO,CACL,KAAM,IAAM,CAAC,CACX,MAAAC,EACA,SAAAC,CACF,IACSC,EAAKF,EAAOC,CAAQ,EAE7B,KAAM,IAAM,CAAC,CACX,MAAAD,EACA,SAAAC,CACF,IACSE,EAAKH,EAAOC,CAAQ,CAE/B,CACF,EACA,uBAAwB,CACtB,MAAO,CAACG,GAAQ,KAAK,OAAO,CAAC,CAC/B,EACA,sBAAuB,CACrB,MAAO,CACL,QAAS,IAAM,KAAK,OAAO,SAAS,KAAK,EACzC,QAAS,IAAM,KAAK,OAAO,SAAS,KAAK,EACzC,QAAS,IAAM,KAAK,OAAO,SAAS,KAAK,EACzC,QAAS,IAAM,KAAK,OAAO,SAAS,KAAK,EACzC,cAAe,IAAM,KAAK,OAAO,SAAS,KAAK,EAC/C,cAAe,IAAM,KAAK,OAAO,SAAS,KAAK,EAE/C,aAAS,IAAM,KAAK,OAAO,SAAS,KAAK,EACzC,mBAAe,IAAM,KAAK,OAAO,SAAS,KAAK,CACjD,CACF,CACF,CAAC,ECxCD,IAAMC,GAAiBC,EAAK,OAAO,CACjC,KAAM,iBACN,YAAa,CACX,MAAO,CACL,eAAgB,CAAC,CACnB,CACF,EACA,MAAO,QACP,WAAY,CACV,MAAO,CAAC,CACN,IAAK,IACP,CAAC,CACH,EACA,WAAW,CACT,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,KAAMC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,CAAC,CAC5E,EACA,aAAc,CACZ,MAAO,CACL,kBAAmB,IAAM,CAAC,CACxB,MAAAE,EACA,MAAAC,CACF,IAAM,CACJ,GAAM,CACJ,IAAKC,CACP,EAAID,EAAM,UACJE,EAAeH,EAAM,EAC3B,OAAIE,EAAU,eAAiB,EAC7BC,EAAa,gBAAgB,KAAK,IAAID,EAAU,IAAM,EAAG,CAAC,EAAG,CAC3D,KAAM,KAAK,IACb,CAAC,EAEDC,EAAa,cAAc,CACzB,KAAM,KAAK,IACb,CAAC,EAEIA,EAEN,QAAQ,CAAC,CACR,GAAAC,EACA,SAAAC,CACF,IAAM,CACJ,IAAIC,EACJ,GAAID,EAAU,CACZ,GAAM,CACJ,IAAAE,CACF,EAAIH,EAAG,UACDI,EAAWD,EAAI,IAAI,EACzB,GAAIA,EAAI,UACFA,EAAI,UAAU,YAChBH,EAAG,aAAaK,EAAc,OAAOL,EAAG,IAAKG,EAAI,IAAM,CAAC,CAAC,EAChDA,EAAI,UAAU,QACvBH,EAAG,aAAaM,EAAc,OAAON,EAAG,IAAKG,EAAI,GAAG,CAAC,EAErDH,EAAG,aAAaK,EAAc,OAAOL,EAAG,IAAKG,EAAI,GAAG,CAAC,MAElD,CAEL,IAAMI,GAAQL,EAAKC,EAAI,OAAO,KAAK,aAAa,eAAiB,MAAQD,IAAO,OAAS,OAASA,EAAG,OAAO,EACxGK,IACFP,EAAG,OAAOI,EAAUG,CAAI,EACxBP,EAAG,aAAaK,EAAc,OAAOL,EAAG,IAAKI,EAAW,CAAC,CAAC,EAE9D,CACAJ,EAAG,eAAe,CACpB,CACA,MAAO,EACT,CAAC,EAAE,IAAI,CACT,CACF,CACF,EACA,eAAgB,CACd,MAAO,CAACQ,GAAc,CACpB,KAAM,8BACN,KAAM,KAAK,IACb,CAAC,CAAC,CACJ,CACF,CAAC,EC/ED,IAAMC,GAAiB,qCACjBC,GAAiB,qCACjBC,GAAuB,mCACvBC,GAAuB,mCACvBC,GAASC,EAAK,OAAO,CACzB,KAAM,SACN,YAAa,CACX,MAAO,CACL,eAAgB,CAAC,CACnB,CACF,EACA,WAAY,CACV,MAAO,CAAC,CACN,IAAK,IACP,EAAG,CACD,IAAK,IACL,SAAUC,GAAQA,EAAK,MAAM,YAAc,UAAY,IACzD,EAAG,CACD,MAAO,mBACT,CAAC,CACH,EACA,WAAW,CACT,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,KAAMC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CAC/E,EACA,aAAc,CACZ,MAAO,CACL,UAAW,IAAM,CAAC,CAChB,SAAAE,CACF,IACSA,EAAS,QAAQ,KAAK,IAAI,EAEnC,aAAc,IAAM,CAAC,CACnB,SAAAA,CACF,IACSA,EAAS,WAAW,KAAK,IAAI,EAEtC,YAAa,IAAM,CAAC,CAClB,SAAAA,CACF,IACSA,EAAS,UAAU,KAAK,IAAI,CAEvC,CACF,EACA,sBAAuB,CACrB,MAAO,CACL,QAAS,IAAM,KAAK,OAAO,SAAS,aAAa,EACjD,QAAS,IAAM,KAAK,OAAO,SAAS,aAAa,CACnD,CACF,EACA,eAAgB,CACd,MAAO,CAACC,EAAc,CACpB,KAAMV,GACN,KAAM,KAAK,IACb,CAAC,EAAGU,EAAc,CAChB,KAAMR,GACN,KAAM,KAAK,IACb,CAAC,CAAC,CACJ,EACA,eAAgB,CACd,MAAO,CAACS,EAAc,CACpB,KAAMV,GACN,KAAM,KAAK,IACb,CAAC,EAAGU,EAAc,CAChB,KAAMR,GACN,KAAM,KAAK,IACb,CAAC,CAAC,CACJ,CACF,CAAC,ECrED,IAAMS,GAAWC,EAAK,OAAO,CAC3B,KAAM,WACN,YAAa,CACX,MAAO,CACL,eAAgB,CAAC,EACjB,mBAAoB,aACpB,oBAAqB,aACvB,CACF,EACA,QAAS,mBACT,SAAU,GACV,WAAY,CACV,MAAO,CAAC,CACN,IAAK,IACP,CAAC,CACH,EACA,WAAW,CACT,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,KAAMC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CAC/E,EACA,sBAAuB,CACrB,MAAO,CACL,MAAO,IAAM,KAAK,OAAO,SAAS,cAAc,KAAK,IAAI,EACzD,IAAK,IAAM,KAAK,OAAO,SAAS,aAAa,KAAK,IAAI,EACtD,YAAa,IAAM,KAAK,OAAO,SAAS,aAAa,KAAK,IAAI,CAChE,CACF,CACF,CAAC,EC5BD,IAAME,GAAWC,EAAK,OAAO,CAC3B,KAAM,WACN,YAAa,CACX,MAAO,CACL,eAAgB,CAAC,EACjB,mBAAoB,aACpB,oBAAqB,aACvB,CACF,EACA,QAAS,mBACT,SAAU,GACV,WAAY,CACV,MAAO,CAAC,CACN,IAAK,IACP,CAAC,CACH,EACA,WAAW,CACT,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,KAAMC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CAC/E,EACA,sBAAuB,CACrB,MAAO,CACL,MAAO,IAAM,KAAK,OAAO,SAAS,cAAc,KAAK,IAAI,EACzD,IAAK,IAAM,KAAK,OAAO,SAAS,aAAa,KAAK,IAAI,EACtD,YAAa,IAAM,KAAK,OAAO,SAAS,aAAa,KAAK,IAAI,CAChE,CACF,CACF,CAAC,EACKE,GAAYC,EAAK,OAAO,CAC5B,KAAM,YACN,YAAa,CACX,MAAO,CACL,eAAgB,CAAC,CACnB,CACF,EACA,WAAY,CACV,MAAO,CAAC,CACN,IAAK,OACL,SAAUC,GACUA,EAAQ,aAAa,OAAO,EAIvC,CAAC,EAFC,EAIb,CAAC,CACH,EACA,WAAW,CACT,eAAAJ,CACF,EAAG,CACD,MAAO,CAAC,OAAQC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CACjF,EACA,aAAc,CACZ,MAAO,CACL,qBAAsB,IAAM,CAAC,CAC3B,MAAAK,EACA,SAAAC,CACF,IAAM,CACJ,IAAMC,EAAaC,EAAkBH,EAAO,KAAK,IAAI,EAErD,OADkB,OAAO,QAAQE,CAAU,EAAE,KAAK,CAAC,CAAC,CAAEE,CAAK,IAAM,CAAC,CAACA,CAAK,EAE/D,GAEFH,EAAS,UAAU,KAAK,IAAI,CACrC,CACF,CACF,CACF,CAAC,EACKI,GAAa,cACbC,GAAcZ,EAAK,OAAO,CAC9B,KAAM,cACN,YAAa,CACX,MAAO,CACL,aAAc,WACd,eAAgB,CAAC,EACjB,UAAW,GACX,eAAgB,EAClB,CACF,EACA,MAAO,aACP,SAAU,CACR,MAAO,GAAG,KAAK,QAAQ,YAAY,GACrC,EACA,eAAgB,CACd,MAAO,CACL,MAAO,CACL,QAAS,EACT,UAAWK,GACFA,EAAQ,aAAa,OAAO,EAAI,SAASA,EAAQ,aAAa,OAAO,GAAK,GAAI,EAAE,EAAI,CAE/F,CACF,CACF,EACA,WAAY,CACV,MAAO,CAAC,CACN,IAAK,IACP,CAAC,CACH,EACA,WAAW,CACT,eAAAJ,CACF,EAAG,CACD,IAGIY,EAAAZ,EAFF,OAAAa,CAxGN,EA0GQD,EADCE,EAAAC,EACDH,EADC,CADH,UAGF,OAAOC,IAAU,EAAI,CAAC,KAAMZ,EAAgB,KAAK,QAAQ,eAAgBa,CAAsB,EAAG,CAAC,EAAI,CAAC,KAAMb,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CAC/K,EACA,aAAc,CACZ,MAAO,CACL,kBAAmB,IAAM,CAAC,CACxB,SAAAM,EACA,MAAAU,CACF,IACM,KAAK,QAAQ,eACRA,EAAM,EAAE,WAAW,KAAK,KAAM,KAAK,QAAQ,aAAc,KAAK,QAAQ,SAAS,EAAE,iBAAiBlB,GAAS,KAAM,KAAK,OAAO,cAAcI,GAAU,IAAI,CAAC,EAAE,IAAI,EAElKI,EAAS,WAAW,KAAK,KAAM,KAAK,QAAQ,aAAc,KAAK,QAAQ,SAAS,CAE3F,CACF,EACA,sBAAuB,CACrB,MAAO,CACL,cAAe,IAAM,KAAK,OAAO,SAAS,kBAAkB,CAC9D,CACF,EACA,eAAgB,CACd,IAAIW,EAAYC,EAAkB,CAChC,KAAMR,GACN,KAAM,KAAK,KACX,cAAeS,IAAU,CACvB,MAAO,CAACA,EAAM,CAAC,CACjB,GACA,cAAe,CAACA,EAAOC,IAASA,EAAK,WAAaA,EAAK,MAAM,QAAU,CAACD,EAAM,CAAC,CACjF,CAAC,EACD,OAAI,KAAK,QAAQ,WAAa,KAAK,QAAQ,kBACzCF,EAAYC,EAAkB,CAC5B,KAAMR,GACN,KAAM,KAAK,KACX,UAAW,KAAK,QAAQ,UACxB,eAAgB,KAAK,QAAQ,eAC7B,cAAeS,GAAUE,EAAA,CACvB,MAAO,CAACF,EAAM,CAAC,GACZ,KAAK,OAAO,cAAcjB,GAAU,IAAI,GAE7C,cAAe,CAACiB,EAAOC,IAASA,EAAK,WAAaA,EAAK,MAAM,QAAU,CAACD,EAAM,CAAC,EAC/E,OAAQ,KAAK,MACf,CAAC,GAEI,CAACF,CAAS,CACnB,CACF,CAAC,ECvJD,IAAMK,GAAYC,EAAK,OAAO,CAC5B,KAAM,YACN,SAAU,IACV,YAAa,CACX,MAAO,CACL,eAAgB,CAAC,CACnB,CACF,EACA,MAAO,QACP,QAAS,UACT,WAAY,CACV,MAAO,CAAC,CACN,IAAK,GACP,CAAC,CACH,EACA,WAAW,CACT,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,IAAKC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CAC9E,EACA,aAAc,CACZ,MAAO,CACL,aAAc,IAAM,CAAC,CACnB,SAAAE,CACF,IACSA,EAAS,QAAQ,KAAK,IAAI,CAErC,CACF,EACA,sBAAuB,CACrB,MAAO,CACL,YAAa,IAAM,KAAK,OAAO,SAAS,aAAa,CACvD,CACF,CACF,CAAC,EChCD,IAAMC,GAAcC,EAAU,OAAO,CACnC,KAAM,cACN,YAAa,CACX,MAAO,CACL,iBAAkB,kBAClB,eAAgB,WAChB,YAAa,yBACb,qBAAsB,GACtB,gBAAiB,GACjB,gBAAiB,EACnB,CACF,EACA,uBAAwB,CACtB,MAAO,CAAC,IAAIC,EAAO,CACjB,IAAK,IAAIC,EAAU,aAAa,EAChC,MAAO,CACL,YAAa,CAAC,CACZ,IAAAC,EACA,UAAAC,CACF,IAAM,CACJ,IAAMC,EAAS,KAAK,OAAO,YAAc,CAAC,KAAK,QAAQ,qBACjD,CACJ,OAAAC,CACF,EAAIF,EACEG,EAAc,CAAC,EACrB,GAAI,CAACF,EACH,OAAO,KAGT,IAAMG,EAAmBL,EAAI,KAAK,cAAc,EAC1CM,GAAiBD,GAAqB,KAAsC,OAASA,EAAiB,WAAWL,CAAG,IAAMK,EAAiB,QAAQ,cAAcL,EAAI,OAAO,IAAM,KACxL,OAAAA,EAAI,YAAY,CAACO,EAAMC,IAAQ,CAC7B,IAAMC,EAAYN,GAAUK,GAAOL,GAAUK,EAAMD,EAAK,SAClDG,EAAU,CAACH,EAAK,QAAU,CAACA,EAAK,WACtC,IAAKE,GAAa,CAAC,KAAK,QAAQ,kBAAoBC,EAAS,CAC3D,IAAMC,EAAU,CAAC,KAAK,QAAQ,cAAc,EACxCL,GACFK,EAAQ,KAAK,KAAK,QAAQ,gBAAgB,EAE5C,IAAMC,EAAaC,EAAW,KAAKL,EAAKA,EAAMD,EAAK,SAAU,CAC3D,MAAOI,EAAQ,KAAK,GAAG,EACvB,mBAAoB,OAAO,KAAK,QAAQ,aAAgB,WAAa,KAAK,QAAQ,YAAY,CAC5F,OAAQ,KAAK,OACb,KAAAJ,EACA,IAAAC,EACA,UAAAC,CACF,CAAC,EAAI,KAAK,QAAQ,WACpB,CAAC,EACDL,EAAY,KAAKQ,CAAU,CAC7B,CACA,OAAO,KAAK,QAAQ,eACtB,CAAC,EACME,GAAc,OAAOd,EAAKI,CAAW,CAC9C,CACF,CACF,CAAC,CAAC,CACJ,CACF,CAAC,EC3DD,IAAMW,GAAa,qCACbC,GAAa,qCACbC,GAASC,EAAK,OAAO,CACzB,KAAM,SACN,YAAa,CACX,MAAO,CACL,eAAgB,CAAC,CACnB,CACF,EACA,WAAY,CACV,MAAO,CAAC,CACN,IAAK,GACP,EAAG,CACD,IAAK,KACP,EAAG,CACD,IAAK,QACP,EAAG,CACD,MAAO,kBACP,UAAW,GACX,SAAUC,GAASA,EAAM,SAAS,cAAc,EAAI,CAAC,EAAI,EAC3D,CAAC,CACH,EACA,WAAW,CACT,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,IAAKC,EAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CAC9E,EACA,aAAc,CACZ,MAAO,CACL,UAAW,IAAM,CAAC,CAChB,SAAAE,CACF,IACSA,EAAS,QAAQ,KAAK,IAAI,EAEnC,aAAc,IAAM,CAAC,CACnB,SAAAA,CACF,IACSA,EAAS,WAAW,KAAK,IAAI,EAEtC,YAAa,IAAM,CAAC,CAClB,SAAAA,CACF,IACSA,EAAS,UAAU,KAAK,IAAI,CAEvC,CACF,EACA,sBAAuB,CACrB,IAAMC,EAAY,CAAC,EACnB,OAAIC,GAAQ,EACVD,EAAU,aAAa,EAAI,IAAM,KAAK,OAAO,SAAS,aAAa,EAEnEA,EAAU,cAAc,EAAI,IAAM,KAAK,OAAO,SAAS,aAAa,EAE/DA,CACT,EACA,eAAgB,CACd,MAAO,CAACE,EAAc,CACpB,KAAMV,GACN,KAAM,KAAK,IACb,CAAC,CAAC,CACJ,EACA,eAAgB,CACd,MAAO,CAACW,EAAc,CACpB,KAAMV,GACN,KAAM,KAAK,IACb,CAAC,CAAC,CACJ,CACF,CAAC,ECnED,IAAMW,GAAa,yBACbC,GAAWC,EAAK,OAAO,CAC3B,KAAM,WACN,YAAa,CACX,MAAO,CACL,OAAQ,GACR,eAAgB,CAAC,EACjB,iBAAkB,UACpB,CACF,EACA,SAAU,CACR,OAAO,KAAK,QAAQ,OAAS,mBAAqB,YACpD,EACA,SAAU,GACV,eAAgB,CACd,MAAO,CACL,QAAS,CACP,QAAS,GACT,YAAa,GACb,UAAWC,GAAWA,EAAQ,aAAa,cAAc,IAAM,OAC/D,WAAYC,IAAe,CACzB,eAAgBA,EAAW,OAC7B,EACF,CACF,CACF,EACA,WAAY,CACV,MAAO,CAAC,CACN,IAAK,iBAAiB,KAAK,IAAI,KAC/B,SAAU,EACZ,CAAC,CACH,EACA,WAAW,CACT,KAAAC,EACA,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,KAAMC,EAAgB,KAAK,QAAQ,eAAgBD,EAAgB,CACzE,YAAa,KAAK,IACpB,CAAC,EAAG,CAAC,QAAS,CAAC,QAAS,CACtB,KAAM,WACN,QAASD,EAAK,MAAM,QAAU,UAAY,IAC5C,CAAC,EAAG,CAAC,MAAM,CAAC,EAAG,CAAC,MAAO,CAAC,CAAC,CAC3B,EACA,sBAAuB,CACrB,IAAMG,EAAY,CAChB,MAAO,IAAM,KAAK,OAAO,SAAS,cAAc,KAAK,IAAI,EACzD,YAAa,IAAM,KAAK,OAAO,SAAS,aAAa,KAAK,IAAI,CAChE,EACA,OAAK,KAAK,QAAQ,OAGXC,EAAAC,EAAA,GACFF,GADE,CAEL,IAAK,IAAM,KAAK,OAAO,SAAS,aAAa,KAAK,IAAI,CACxD,GALSA,CAMX,EACA,aAAc,CACZ,MAAO,CAAC,CACN,KAAAH,EACA,eAAAC,EACA,OAAAK,EACA,OAAAC,CACF,IAAM,CACJ,IAAMC,EAAW,SAAS,cAAc,IAAI,EACtCC,EAAkB,SAAS,cAAc,OAAO,EAChDC,EAAiB,SAAS,cAAc,MAAM,EAC9CC,EAAW,SAAS,cAAc,OAAO,EACzCC,EAAU,SAAS,cAAc,KAAK,EAC5C,OAAAH,EAAgB,gBAAkB,QAClCE,EAAS,KAAO,WAChBA,EAAS,iBAAiB,SAAUE,GAAS,CAG3C,GAAI,CAACN,EAAO,YAAc,CAAC,KAAK,QAAQ,kBAAmB,CACzDI,EAAS,QAAU,CAACA,EAAS,QAC7B,MACF,CACA,GAAM,CACJ,QAAAG,CACF,EAAID,EAAM,OACNN,EAAO,YAAc,OAAOD,GAAW,YACzCC,EAAO,MAAM,EAAE,MAAM,OAAW,CAC9B,eAAgB,EAClB,CAAC,EAAE,QAAQ,CAAC,CACV,GAAAQ,CACF,IAAM,CACJ,IAAMC,EAAWV,EAAO,EAClBW,EAAcF,EAAG,IAAI,OAAOC,CAAQ,EAC1C,OAAAD,EAAG,cAAcC,EAAU,OAAWZ,EAAAC,EAAA,GAChCY,GAAgB,KAAiC,OAASA,EAAY,OADtC,CAEpC,QAAAH,CACF,EAAC,EACM,EACT,CAAC,EAAE,IAAI,EAEL,CAACP,EAAO,YAAc,KAAK,QAAQ,oBAEhC,KAAK,QAAQ,kBAAkBP,EAAMc,CAAO,IAC/CH,EAAS,QAAU,CAACA,EAAS,SAGnC,CAAC,EACD,OAAO,QAAQ,KAAK,QAAQ,cAAc,EAAE,QAAQ,CAAC,CAACO,EAAKC,CAAK,IAAM,CACpEX,EAAS,aAAaU,EAAKC,CAAK,CAClC,CAAC,EACDX,EAAS,QAAQ,QAAUR,EAAK,MAAM,QAClCA,EAAK,MAAM,SACbW,EAAS,aAAa,UAAW,SAAS,EAE5CF,EAAgB,OAAOE,EAAUD,CAAc,EAC/CF,EAAS,OAAOC,EAAiBG,CAAO,EACxC,OAAO,QAAQX,CAAc,EAAE,QAAQ,CAAC,CAACiB,EAAKC,CAAK,IAAM,CACvDX,EAAS,aAAaU,EAAKC,CAAK,CAClC,CAAC,EACM,CACL,IAAKX,EACL,WAAYI,EACZ,OAAQQ,GACFA,EAAY,OAAS,KAAK,KACrB,IAETZ,EAAS,QAAQ,QAAUY,EAAY,MAAM,QACzCA,EAAY,MAAM,QACpBT,EAAS,aAAa,UAAW,SAAS,EAE1CA,EAAS,gBAAgB,SAAS,EAE7B,GAEX,CACF,CACF,EACA,eAAgB,CACd,MAAO,CAACU,EAAkB,CACxB,KAAM1B,GACN,KAAM,KAAK,KACX,cAAe2B,IAAU,CACvB,QAASA,EAAMA,EAAM,OAAS,CAAC,IAAM,GACvC,EACF,CAAC,CAAC,CACJ,CACF,CAAC,EC7ID,IAAMC,GAAWC,EAAK,OAAO,CAC3B,KAAM,WACN,YAAa,CACX,MAAO,CACL,aAAc,WACd,eAAgB,CAAC,CACnB,CACF,EACA,MAAO,aACP,SAAU,CACR,MAAO,GAAG,KAAK,QAAQ,YAAY,GACrC,EACA,WAAY,CACV,MAAO,CAAC,CACN,IAAK,iBAAiB,KAAK,IAAI,KAC/B,SAAU,EACZ,CAAC,CACH,EACA,WAAW,CACT,eAAAC,CACF,EAAG,CACD,MAAO,CAAC,KAAMC,EAAgB,KAAK,QAAQ,eAAgBD,EAAgB,CACzE,YAAa,KAAK,IACpB,CAAC,EAAG,CAAC,CACP,EACA,aAAc,CACZ,MAAO,CACL,eAAgB,IAAM,CAAC,CACrB,SAAAE,CACF,IACSA,EAAS,WAAW,KAAK,KAAM,KAAK,QAAQ,YAAY,CAEnE,CACF,EACA,sBAAuB,CACrB,MAAO,CACL,cAAe,IAAM,KAAK,OAAO,SAAS,eAAe,CAC3D,CACF,CACF,CAAC,ECvCD,IAAMC,GAAOC,EAAK,OAAO,CACvB,KAAM,OACN,MAAO,QACT,CAAC,ECmBD,IAAMC,GAAaC,EAAU,OAAO,CAClC,KAAM,aAEN,eAAgB,CACd,IAAIC,EACJ,IAAMC,EAAa,CAAC,EAEdC,EAAU,KAAK,QACrB,OAAKA,GAAY,KAA6B,OAASA,EAAQ,cAAgB,IAC7ED,EAAW,KAAKE,GAAW,UAAUD,GAAY,KAA6B,OAASA,EAAQ,UAAU,CAAC,GAEvGA,GAAY,KAA6B,OAASA,EAAQ,QAAU,IACvED,EAAW,KAAKG,GAAK,UAAUF,GAAY,KAA6B,OAASA,EAAQ,IAAI,CAAC,GAE3FA,GAAY,KAA6B,OAASA,EAAQ,cAAgB,IAC7ED,EAAW,KAAKI,GAAW,UAAUH,GAAY,KAA6B,OAASA,EAAQ,UAAU,CAAC,GAEvGA,GAAY,KAA6B,OAASA,EAAQ,QAAU,IACvED,EAAW,KAAKK,GAAK,UAAUJ,GAAY,KAA6B,OAASA,EAAQ,IAAI,CAAC,GAE3FA,GAAY,KAA6B,OAASA,EAAQ,aAAe,IAC5ED,EAAW,KAAKM,GAAU,UAAUL,GAAY,KAA6B,OAASA,EAAQ,SAAS,CAAC,GAErGA,GAAY,KAA6B,OAASA,EAAQ,YAAc,IAC3ED,EAAW,KAAKO,GAAS,UAAUN,GAAY,KAA6B,OAASA,EAAQ,QAAQ,CAAC,GAEnGA,GAAY,KAA6B,OAASA,EAAQ,cAAgB,IAC7ED,EAAW,KAAKQ,GAAW,UAAUP,GAAY,KAA6B,OAASA,EAAQ,UAAU,CAAC,GAEvGA,GAAY,KAA6B,OAASA,EAAQ,aAAe,IAC5ED,EAAW,KAAKS,GAAU,UAAUR,GAAY,KAA6B,OAASA,EAAQ,SAAS,CAAC,GAErGA,GAAY,KAA6B,OAASA,EAAQ,aAAe,IAC5ED,EAAW,KAAKU,GAAU,UAAUT,GAAY,KAA6B,OAASA,EAAQ,SAAS,CAAC,GAErGA,GAAY,KAA6B,OAASA,EAAQ,WAAa,IAC1ED,EAAW,KAAKW,GAAQ,UAAU,OAAO,OAAO,CAC9C,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,CAC3B,EAAGV,GAAY,KAA6B,OAASA,EAAQ,OAAO,CAAC,EAAE,OAAO,CAC5E,sBAAuB,CACrB,OAAO,KAAK,QAAQ,OAAO,OAAO,CAACW,EAAOC,IAAU,OAAO,OAAO,OAAO,OAAO,CAAC,EAAGD,GAAS,CAAC,CAAC,EAAG,CAChG,CAAC,WAAWC,CAAK,EAAE,EAAG,IAAM,OAAS,MAAQ,OAAS,OAAS,OAAS,KAAK,OAAO,SAAS,cAAc,CACzG,MAAAA,CACF,CAAC,CACH,CAAC,EAAG,CAAC,CAAC,CACR,CACF,CAAC,CAAC,GAECZ,GAAY,KAA6B,OAASA,EAAQ,WAAa,IAC1ED,EAAW,KAAKc,GAAQ,UAAU,OAAO,OAAO,CAC9C,MAAO,IACP,cAAe,GACjB,EAAGb,GAAY,KAA6B,OAASA,EAAQ,OAAO,CAAC,CAAC,GAEnEA,GAAY,KAA6B,OAASA,EAAQ,kBAAoB,IACjFD,EAAW,KAAKe,GAAe,UAAUd,GAAY,KAA6B,OAASA,EAAQ,cAAc,CAAC,GAE/GA,GAAY,KAA6B,OAASA,EAAQ,UAAY,IACzED,EAAW,KAAKgB,GAAO,UAAUf,GAAY,KAA6B,OAASA,EAAQ,MAAM,CAAC,GAE/FA,GAAY,KAA6B,OAASA,EAAQ,YAAc,IAC3ED,EAAW,KAAKiB,GAAS,UAAUhB,GAAY,KAA6B,OAASA,EAAQ,QAAQ,CAAC,GAEnGA,GAAY,KAA6B,OAASA,EAAQ,YAAc,IAC3ED,EAAW,KAAKkB,GAAS,UAAUjB,GAAY,KAA6B,OAASA,EAAQ,QAAQ,CAAC,GAEnGA,GAAY,KAA6B,OAASA,EAAQ,YAAc,IAC3ED,EAAW,KAAKmB,GAAS,UAAU,OAAO,OAAO,CAC/C,OAAQ,EACV,EAAGlB,GAAY,KAA6B,OAASA,EAAQ,QAAQ,CAAC,CAAC,GAEpEA,GAAY,KAA6B,OAASA,EAAQ,eAAiB,IAC9ED,EAAW,KAAKoB,GAAY,UAAUnB,GAAY,KAA6B,OAASA,EAAQ,WAAW,CAAC,GAEzGA,GAAY,KAA6B,OAASA,EAAQ,aAAe,IAC5ED,EAAW,KAAKqB,GAAU,UAAUpB,GAAY,KAA6B,OAASA,EAAQ,SAAS,CAAC,GAErGA,GAAY,KAA6B,OAASA,EAAQ,UAAY,IACzED,EAAW,KAAKsB,GAAO,UAAUrB,GAAY,KAA6B,OAASA,EAAQ,MAAM,CAAC,GAE/FA,GAAY,KAA6B,OAASA,EAAQ,QAAU,IACvED,EAAW,KAAKuB,GAAK,UAAUtB,GAAY,KAA6B,OAASA,EAAQ,IAAI,CAAC,GAE3FA,GAAY,KAA6B,OAASA,EAAQ,eAAiB,IAC9ED,EAAW,KAAKwB,GAAY,UAAU,OAAO,OAAO,CAClD,eAAgB,uBAChB,gBAAiB,GACjB,gBAAiB,GACjB,qBAAsB,GACtB,YAAa,EACf,GAAIzB,EAAKE,GAAY,KAA6B,OAASA,EAAQ,eAAiB,MAAQF,IAAO,OAASA,EAAK,CAAC,CAAC,CAAC,CAAC,GAElHE,GAAY,KAA6B,OAASA,EAAQ,SAAW,IACxED,EAAW,KAAKyB,EAAc,EAEzBzB,CACT,CACF,CAAC","names":["TuiCustomEnter","Extension","editor","_a","_b","_c","_d","_e","inputRegex","Blockquote","Node","HTMLAttributes","mergeAttributes","commands","wrappingInputRule","starInputRegex","starPasteRegex","underscoreInputRegex","underscorePasteRegex","Bold","Mark","node","value","HTMLAttributes","mergeAttributes","commands","markInputRule","markPasteRule","ListItem","Node","HTMLAttributes","mergeAttributes","TextStyle","Mark","element","state","commands","attributes","getMarkAttributes","value","inputRegex","BulletList","chain","inputRule","wrappingInputRule","inputRegex","pasteRegex","Code","Mark","HTMLAttributes","mergeAttributes","commands","markInputRule","markPasteRule","backtickInputRegex","tildeInputRegex","CodeBlock","Node","element","_a","languageClassPrefix","language","className","node","HTMLAttributes","mergeAttributes","attributes","commands","empty","$anchor","isAtStart","editor","state","selection","$from","isAtEnd","endsWithDoubleNewline","tr","doc","after","textblockTypeInputRule","match","Plugin","PluginKey","view","event","text","vscode","vscodeData","TextSelection","Document","Node","dropCursor","options","Plugin","editorView","DropCursorView","_a","name","handler","e","prevState","pos","$pos","isBlock","rect","before","after","node","nodeRect","top","coords","parent","parentLeft","parentTop","timeout","event","disableDropCursor","disabled","target","point","dropPoint","Dropcursor","Extension","dropCursor","GapCursor","_GapCursor","Selection","$pos","doc","mapping","Slice","other","json","GapBookmark","parent","closedBefore","closedAfter","override","deflt","dir","mustMove","search","pos","next","d","$cur","inside","NodeSelection","_GapBookmark","index","before","after","gapCursor","Plugin","drawGapCursor","_view","$anchor","$head","handleClick","handleKeyDown","beforeinput","keydownHandler","arrow","axis","dirStr","state","dispatch","view","sel","$start","TextSelection","$found","event","clickPos","$from","insert","frag","Fragment","i","tr","node","DecorationSet","Decoration","Gapcursor","Extension","gapCursor","extension","_a","context","callOrReturn","getExtensionField","HardBreak","Node","HTMLAttributes","mergeAttributes","commands","chain","state","editor","selection","storedMarks","keepMarks","splittableMarks","marks","tr","dispatch","filteredMarks","mark","Heading","Node","level","node","HTMLAttributes","mergeAttributes","attributes","commands","items","__spreadProps","__spreadValues","textblockTypeInputRule","GOOD_LEAF_SIZE","RopeSequence","other","Append","from","to","i","f","result","elt","values","Leaf","prototypeAccessors","start","left","right","leftLen","inner","dist_default","max_empty_items","Branch","_Branch","items","eventCount","state","preserveItems","end","remap","mapFrom","transform","selection","remaining","addAfter","addBefore","item","i","Item","step","map","histOptions","newItems","oldItems","lastItem","merged","overflow","DEPTH_OVERFLOW","cutOffEvents","from","to","maps","Mapping","mirrorPos","array","rebasedTransform","rebasedCount","rebasedItems","start","mapping","newUntil","iRebased","pos","newMaps","branch","count","upto","events","newItem","last","dist_default","n","cutPoint","_Item","mirrorOffset","other","HistoryState","done","undone","prevRanges","prevTime","prevComposition","applyTransaction","history","tr","options","historyTr","historyKey","rebased","closeHistoryKey","appended","mustPreserveItems","rangesFor","composition","newGroup","isAdjacentTo","mapRanges","adjacent","result","_from","_to","ranges","histTransaction","dispatch","redo","pop","added","newHist","cachedPreserveItems","cachedPreserveItemsPlugins","plugins","historyKey","PluginKey","closeHistoryKey","history","config","Plugin","HistoryState","Branch","tr","hist","state","applyTransaction","view","inputType","command","undo","redo","dispatch","histTransaction","History","Extension","state","dispatch","undo","redo","history","HorizontalRule","Node","HTMLAttributes","mergeAttributes","chain","state","$originTo","currentChain","tr","dispatch","_a","$to","posAfter","TextSelection","NodeSelection","node","nodeInputRule","starInputRegex","starPasteRegex","underscoreInputRegex","underscorePasteRegex","Italic","Mark","node","HTMLAttributes","mergeAttributes","commands","markInputRule","markPasteRule","ListItem","Node","HTMLAttributes","mergeAttributes","ListItem","Node","HTMLAttributes","mergeAttributes","TextStyle","Mark","element","state","commands","attributes","getMarkAttributes","value","inputRegex","OrderedList","_a","start","attributesWithoutStart","__objRest","chain","inputRule","wrappingInputRule","match","node","__spreadValues","Paragraph","Node","HTMLAttributes","mergeAttributes","commands","Placeholder","Extension","Plugin","PluginKey","doc","selection","active","anchor","decorations","emptyDocInstance","isEditorEmpty","node","pos","hasAnchor","isEmpty","classes","decoration","Decoration","DecorationSet","inputRegex","pasteRegex","Strike","Mark","style","HTMLAttributes","mergeAttributes","commands","shortcuts","isMacOS","markInputRule","markPasteRule","inputRegex","TaskItem","Node","element","attributes","node","HTMLAttributes","mergeAttributes","shortcuts","__spreadProps","__spreadValues","getPos","editor","listItem","checkboxWrapper","checkboxStyler","checkbox","content","event","checked","tr","position","currentNode","key","value","updatedNode","wrappingInputRule","match","TaskList","Node","HTMLAttributes","mergeAttributes","commands","Text","Node","StarterKit","Extension","_a","extensions","options","Blockquote","Bold","BulletList","Code","CodeBlock","Document","Dropcursor","Gapcursor","HardBreak","Heading","items","level","History","HorizontalRule","Italic","ListItem","TaskList","TaskItem","OrderedList","Paragraph","Strike","Text","Placeholder","TuiCustomEnter"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}