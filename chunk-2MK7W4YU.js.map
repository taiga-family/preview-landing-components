{"version":3,"sources":["node_modules/@tiptap/extension-text-align/dist/index.js"],"sourcesContent":["import { Extension } from '@tiptap/core';\n\n/**\n * This extension allows you to align text.\n * @see https://www.tiptap.dev/api/extensions/text-align\n */\nconst TextAlign = Extension.create({\n  name: 'textAlign',\n  addOptions() {\n    return {\n      types: [],\n      alignments: ['left', 'center', 'right', 'justify'],\n      defaultAlignment: 'left'\n    };\n  },\n  addGlobalAttributes() {\n    return [{\n      types: this.options.types,\n      attributes: {\n        textAlign: {\n          default: this.options.defaultAlignment,\n          parseHTML: element => {\n            const alignment = element.style.textAlign || this.options.defaultAlignment;\n            return this.options.alignments.includes(alignment) ? alignment : this.options.defaultAlignment;\n          },\n          renderHTML: attributes => {\n            if (attributes.textAlign === this.options.defaultAlignment) {\n              return {};\n            }\n            return {\n              style: `text-align: ${attributes.textAlign}`\n            };\n          }\n        }\n      }\n    }];\n  },\n  addCommands() {\n    return {\n      setTextAlign: alignment => ({\n        commands\n      }) => {\n        if (!this.options.alignments.includes(alignment)) {\n          return false;\n        }\n        return this.options.types.map(type => commands.updateAttributes(type, {\n          textAlign: alignment\n        })).every(response => response);\n      },\n      unsetTextAlign: () => ({\n        commands\n      }) => {\n        return this.options.types.map(type => commands.resetAttributes(type, 'textAlign')).every(response => response);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-l': () => this.editor.commands.setTextAlign('left'),\n      'Mod-Shift-e': () => this.editor.commands.setTextAlign('center'),\n      'Mod-Shift-r': () => this.editor.commands.setTextAlign('right'),\n      'Mod-Shift-j': () => this.editor.commands.setTextAlign('justify')\n    };\n  }\n});\nexport { TextAlign, TextAlign as default };\n"],"mappings":"wCAMA,IAAMA,EAAYC,EAAU,OAAO,CACjC,KAAM,YACN,YAAa,CACX,MAAO,CACL,MAAO,CAAC,EACR,WAAY,CAAC,OAAQ,SAAU,QAAS,SAAS,EACjD,iBAAkB,MACpB,CACF,EACA,qBAAsB,CACpB,MAAO,CAAC,CACN,MAAO,KAAK,QAAQ,MACpB,WAAY,CACV,UAAW,CACT,QAAS,KAAK,QAAQ,iBACtB,UAAWC,GAAW,CACpB,IAAMC,EAAYD,EAAQ,MAAM,WAAa,KAAK,QAAQ,iBAC1D,OAAO,KAAK,QAAQ,WAAW,SAASC,CAAS,EAAIA,EAAY,KAAK,QAAQ,gBAChF,EACA,WAAYC,GACNA,EAAW,YAAc,KAAK,QAAQ,iBACjC,CAAC,EAEH,CACL,MAAO,eAAeA,EAAW,SAAS,EAC5C,CAEJ,CACF,CACF,CAAC,CACH,EACA,aAAc,CACZ,MAAO,CACL,aAAcD,GAAa,CAAC,CAC1B,SAAAE,CACF,IACO,KAAK,QAAQ,WAAW,SAASF,CAAS,EAGxC,KAAK,QAAQ,MAAM,IAAIG,GAAQD,EAAS,iBAAiBC,EAAM,CACpE,UAAWH,CACb,CAAC,CAAC,EAAE,MAAMI,GAAYA,CAAQ,EAJrB,GAMX,eAAgB,IAAM,CAAC,CACrB,SAAAF,CACF,IACS,KAAK,QAAQ,MAAM,IAAIC,GAAQD,EAAS,gBAAgBC,EAAM,WAAW,CAAC,EAAE,MAAMC,GAAYA,CAAQ,CAEjH,CACF,EACA,sBAAuB,CACrB,MAAO,CACL,cAAe,IAAM,KAAK,OAAO,SAAS,aAAa,MAAM,EAC7D,cAAe,IAAM,KAAK,OAAO,SAAS,aAAa,QAAQ,EAC/D,cAAe,IAAM,KAAK,OAAO,SAAS,aAAa,OAAO,EAC9D,cAAe,IAAM,KAAK,OAAO,SAAS,aAAa,SAAS,CAClE,CACF,CACF,CAAC","names":["TextAlign","Extension","element","alignment","attributes","commands","type","response"],"x_google_ignoreList":[0]}